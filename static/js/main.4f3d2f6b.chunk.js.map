{"version":3,"sources":["helper-functions.js","general-components/label-and-text-field.js","verb-management/verb-addition-window.js","verb-management/verb-manager.js","general-components/toggle-button-list.js","practice/practice.js","index.js"],"names":["capitalize","string","charAt","toUpperCase","slice","randomChoice","array","Math","floor","random","length","checkOnlySpanishCharacters","test","window","alert","LabelAndTextField","divClassName","textFieldClassName","textFieldPlaceHolder","labelText","sharedId","textFieldValue","textFieldOnChange","requireTextField","disableTextField","maxLength","textFieldTabIndex","className","htmlFor","id","type","value","onChange","placeholder","required","disabled","tabIndex","IMPORTANT_FIELD_DIV_CLASS_NAME","VerbAdditionWindow","props","verbToAdd","setVerbToAdd","pronounObjectsArray","code","display","displayed","ref","outerDivRef","onClick","resetVaw","icon","faTimesCircle","onSubmit","e","preventDefault","past","indexOf","present","handleSubmit","isRegular","name","checked","faQuestionCircle","spanishInfinitive","target","toLowerCase","conjugationObject","infinitive","ending","stem","conjugationObj","Array","fill","esConjugate","englishPast","englishPresent","map","tenseName","tenseNameIndex","Fragment","pronounObject","index","arrayToChange","indexToChange","newItem","newArray","changeOneItem","handleArrayInputChange","DEFAULT_VERB","VerbManager","useState","useRef","vawIsDisplayed","setVawIsDisplayed","selectedVerbs","setSelectedVerbs","listOfVerbs","setListOfVerbs","current","scrollTop","document","activeElement","blur","handleEditVerb","JSON","parse","currentTarget","getAttribute","deleteButtonContent","deleteButtonClassName","deleteButtonIsDisabled","selfRef","updatedListOfVerbs","indexToDelete","selectedVerbObject","i","splice","verbObject","onDoubleClick","clickedVerbObject","stopPropagation","updatedSelectedVerbs","findIndex","push","handleVerbSelection","stringify","setDisplayed","newVerb","submitType","foundMatchingInfinitive","ToggleButtonList","listClassNames","labelsArray","label","stateClassName","stateMarker","valuesArray","onStyle","onMarker","offStyle","offMarker","buttonStyle","handleButtonClick","buttonTabIndex","String","Practice","handleTenseChange","updatedTenseIndex","updatedTenses","state","selectedTenses","tense","setState","handleInputChange","inputValue","input","handleNewQuestion","tenseNumbers","forEach","tenseBool","sentenceObject","spanishSentencesObject","englishSentence","irConjugation","spanish","english","conjugationIndex","yo","tú","él","ella","usted","nosotros","nosotras","vosotros","vosotras","ellos","ellas","ustedes","normalArray","prodropArray","console","error","makeSentenceObject","question","answers","trimmedInput","trim","inputWordsArray","processedWord","join","filter","word","isCorrect","userInputSpansArray","endSpace","toString","feedbackMessage","actualAnswer","clearInputAndNewQuestion","bind","this","feedbackSectionContents","faCheckSquare","style","width","faAngleRight","href","sectionBelow","scrollIntoView","behavior","faAngleDown","React","Component","App","defaultLov","verbManagerRef","practiceRef","sectionAbove","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4f3d2f6b.chunk.js","sourcesContent":["export function capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function randomChoice(array) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport function esConjugate(infinitive) {\r\n  const ending = infinitive.slice(-2);\r\n  const stem = infinitive.slice(0, -2);\r\n  let conjugationObj = {};\r\n  if (ending === \"ar\") {\r\n    conjugationObj.past = [\r\n      stem + \"é\",\r\n      stem + \"aste\",\r\n      stem + \"ó\",\r\n      stem + \"amos\",\r\n      stem + \"asteis\",\r\n      stem + \"aron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"as\",\r\n      stem + \"a\",\r\n      stem + \"amos\",\r\n      stem + \"áis\",\r\n      stem + \"an\",\r\n    ];\r\n  } else if (ending === \"er\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"emos\",\r\n      stem + \"éis\",\r\n      stem + \"en\",\r\n    ];\r\n  } else if (ending === \"ir\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"imos\",\r\n      stem + \"ís\",\r\n      stem + \"en\",\r\n    ];\r\n  } else {\r\n    conjugationObj.past = Array(6).fill(infinitive);\r\n    conjugationObj.present = Array(6).fill(infinitive);\r\n  }\r\n  return conjugationObj;\r\n}\r\n\r\nexport function checkOnlySpanishCharacters(string) {\r\n  if (!/^[a-záéíóúüñ]*$/i.test(string)) {\r\n    window.alert(\r\n      \"Please only type letters that are in the spanish alphabet: a-z and áéíóúüñ\"\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function makeSentenceObject(verbObject, tense) {\r\n  const pronounObjectsArray = [\r\n    { spanish: \"yo\", english: \"i\" },\r\n    { spanish: \"tú\", english: \"you (informal)\" },\r\n    { spanish: \"él\", english: \"he\" },\r\n    { spanish: \"ella\", english: \"she\" },\r\n    { spanish: \"usted\", english: \"you (formal)\" },\r\n    { spanish: \"nosotros\", english: \"we (m)\" },\r\n    { spanish: \"nosotras\", english: \"we (f)\" },\r\n    { spanish: \"vosotros\", english: \"you (pl, m)\" },\r\n    { spanish: \"vosotras\", english: \"you (pl, f)\" },\r\n    { spanish: \"ellos\", english: \"they (m)\" },\r\n    { spanish: \"ellas\", english: \"they (f)\" },\r\n    { spanish: \"ustedes\", english: \"they (formal)\" },\r\n  ];\r\n  const irConjugation = [\"voy\", \"vas\", \"va\", \"vamos\", \"váis\", \"van\"];\r\n  const toBeConjugation = [\"am\", \"are\", \"is\", \"are\", \"are\", \"are\"];\r\n  const pronounIndexObject = {\r\n    yo: 0,\r\n    tú: 1,\r\n    él: 2,\r\n    ella: 2,\r\n    usted: 2,\r\n    nosotros: 3,\r\n    nosotras: 3,\r\n    vosotros: 4,\r\n    vosotras: 4,\r\n    ellos: 5,\r\n    ellas: 5,\r\n    ustedes: 5,\r\n  };\r\n\r\n  let pronounObject = randomChoice(pronounObjectsArray);\r\n\r\n  let spanishSentencesObject;\r\n  let englishSentence;\r\n  const conjugationIndex = pronounIndexObject[pronounObject.spanish];\r\n  if (tense === 0) {\r\n    spanishSentencesObject = {\r\n      normalArray: [pronounObject.spanish, verbObject.past[conjugationIndex]],\r\n      prodropArray: [verbObject.past[conjugationIndex]],\r\n    };\r\n    englishSentence = [pronounObject.english, verbObject.englishPast];\r\n  } else if (tense === 1) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        verbObject.present[conjugationIndex],\r\n      ],\r\n      prodropArray: [verbObject.present[conjugationIndex]],\r\n    };\r\n    if (pronounObject.spanish === \"él\" || pronounObject.spanish === \"ella\") {\r\n      englishSentence = [\r\n        pronounObject.english,\r\n        verbObject.englishPresent + \"s\",\r\n      ];\r\n    } else {\r\n      englishSentence = [pronounObject.english, verbObject.englishPresent];\r\n    }\r\n  } else if (tense === 2) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n      prodropArray: [\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n    };\r\n    englishSentence = [\r\n      pronounObject.english,\r\n      pronounObject.spanish !== \"usted\"\r\n        ? toBeConjugation[conjugationIndex]\r\n        : \"are\",\r\n      \"going\",\r\n      \"to\",\r\n      verbObject.englishPresent,\r\n    ];\r\n  } else {\r\n    console.error(\r\n      `Invalid tense argument passed to makeSentenceObject function: ${tense}`\r\n    );\r\n  }\r\n\r\n  return {\r\n    spanishSentencesObject: spanishSentencesObject,\r\n    englishSentence: englishSentence,\r\n  };\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction LabelAndTextField({\r\n  divClassName,\r\n  textFieldClassName,\r\n  textFieldPlaceHolder,\r\n  labelText,\r\n  sharedId,\r\n  textFieldValue,\r\n  textFieldOnChange,\r\n  requireTextField,\r\n  disableTextField,\r\n  maxLength,\r\n  textFieldTabIndex,\r\n}) {\r\n  return (\r\n    <div className={divClassName}>\r\n      <label htmlFor={sharedId}>{labelText}</label>\r\n      <input\r\n        id={sharedId}\r\n        className={textFieldClassName}\r\n        type=\"text\"\r\n        value={textFieldValue}\r\n        onChange={textFieldOnChange}\r\n        placeholder={textFieldPlaceHolder}\r\n        required={requireTextField}\r\n        disabled={disableTextField}\r\n        maxLength={maxLength}\r\n        tabIndex={textFieldTabIndex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nLabelAndTextField.propTypes = {\r\n  sharedId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LabelAndTextField;\r\n","import React from \"react\";\r\nimport { capitalize } from \"../helper-functions\";\r\nimport { esConjugate, checkOnlySpanishCharacters } from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimesCircle,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport LabelAndTextField from \"../general-components/label-and-text-field\";\r\n\r\nconst GENERAL_DIV_CLASS_NAME =\r\n  \"flex flex-col space-y-2 md:flex-row md:items-center md:space-x-2 md:justify-end\";\r\n\r\nconst IMPORTANT_FIELD_DIV_CLASS_NAME = \"flex flex-col space-y-2\";\r\n\r\nexport default function VerbAdditionWindow(props) {\r\n  const verbToAdd = props.verbToAdd;\r\n  const setVerbToAdd = props.setVerbToAdd;\r\n\r\n  const pronounObjectsArray = [\r\n    { code: \"yo\", display: \"Yo\" },\r\n    { code: \"tú\", display: \"Tú\" },\r\n    { code: \"él\", display: \"Él/ella/usted\" },\r\n    { code: \"nosotros\", display: \"Nosotros/nosotras\" },\r\n    { code: \"vosotros\", display: \"Vosotros/vosotras\" },\r\n    { code: \"ellos\", display: \"Ellos/ellas/ustedes\" },\r\n  ];\r\n\r\n  function changeOneItem(arrayToChange, indexToChange, newItem) {\r\n    const newArray = arrayToChange.slice();\r\n    newArray[indexToChange] = newItem;\r\n    return newArray;\r\n  }\r\n\r\n  function handleInfinitiveChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd(() => {\r\n      const spanishInfinitive = e.target.value.toLowerCase();\r\n      if (verbToAdd.isRegular) {\r\n        const conjugationObject = esConjugate(spanishInfinitive);\r\n        return {\r\n          ...verbToAdd,\r\n          spanishInfinitive: spanishInfinitive,\r\n          past: conjugationObject.past,\r\n          present: conjugationObject.present,\r\n        };\r\n      }\r\n      return { ...verbToAdd, spanishInfinitive: spanishInfinitive };\r\n    });\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [e.target.id]: e.target.value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  function handleEnglishPresentChange(e) {\r\n    if (/to /i.test(e.target.value)) {\r\n      window.alert(\r\n        \"Please enter the present tense english as just one word e.g. 'speak'\\nNOT 'to speak'\"\r\n      );\r\n      setVerbToAdd({\r\n        ...verbToAdd,\r\n        englishPresent: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      englishPresent: e.target.value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  function handleArrayInputChange(e, arrayToChange, indexToChange) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [arrayToChange]: changeOneItem(\r\n        verbToAdd[arrayToChange],\r\n        indexToChange,\r\n        e.target.value.toLowerCase()\r\n      ),\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (\r\n      verbToAdd.past.indexOf(\"\") === -1 &&\r\n      verbToAdd.present.indexOf(\"\") === -1\r\n    ) {\r\n      props.handleSubmit(verbToAdd);\r\n    } else {\r\n      window.alert(\"Make sure all fields are filled in.\");\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    props.resetVaw();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 z-20 overflow-scroll bg-gray-50 px-10 py-8 ${\r\n        props.displayed\r\n          ? \"transform-none transition-transform duration-500 visible\"\r\n          : \"transform translate-y-full transition-transform duration-500 invisible\"\r\n      }\r\n      lg:w-max\r\n      lg:mx-auto\r\n      md:overflow-y-auto\r\n      `}\r\n      ref={props.outerDivRef}\r\n    >\r\n      <div className=\"flex items-start\">\r\n        <h1 className=\"font-black text-4xl uppercase\">Add/edit a verb</h1>\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ml-auto text-4xl\"\r\n          tabIndex={props.displayed ? 0 : -1}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faTimesCircle}\r\n            className=\"hover:text-blue-700\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <form\r\n        className=\"mt-10\"\r\n        onSubmit={handleSubmit}\r\n        // disabled={!props.displayed}\r\n      >\r\n        <p className=\"font-bold text-xl\">The verb is ...</p>\r\n        <p className=\"font-normal text-gray-500 text-base leading-tight mt-2\">\r\n          Regular verbs will autocomplete entries based on what is in the\r\n          'Spanish infinitive' box\r\n        </p>\r\n        <ul className=\"flex space-x-2 mt-4\">\r\n          <li\r\n            className={`button flex space-x-2 items-center px-2 py-1 border-2  ${\r\n              verbToAdd.isRegular\r\n                ? \"button-on border-blue-700\"\r\n                : \"button-off border-transparent\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n          >\r\n            <label htmlFor=\"regular\">Regular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"regular\"\r\n              value=\"true\"\r\n              checked={verbToAdd.isRegular === true}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n              tabIndex={props.displayed ? 0 : -1}\r\n            />\r\n          </li>\r\n          <li\r\n            className={`flex space-x-2 items-center button px-2 py-1 border-2 ${\r\n              !verbToAdd.isRegular\r\n                ? \"button-on border-blue-700\"\r\n                : \"button-off border-transparent\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n          >\r\n            <label htmlFor=\"irregular\">Irregular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"irregular\"\r\n              value=\"false\"\r\n              checked={verbToAdd.isRegular === false}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n              tabIndex={props.displayed ? 0 : -1}\r\n            />\r\n          </li>\r\n        </ul>\r\n        <hr className=\"mt-4\" />\r\n        <div className=\"flex flex-col md:flex-row md:justify-center md:space-x-8 space-y-2 md:space-y-0 mt-4\">\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                Spanish Infinitive <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"spanishInfinitive\"\r\n            textFieldValue={verbToAdd.spanishInfinitive}\r\n            textFieldOnChange={handleInfinitiveChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Past <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPast\"\r\n            textFieldValue={verbToAdd.englishPast}\r\n            textFieldOnChange={handleInputChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Present <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPresent\"\r\n            textFieldValue={verbToAdd.englishPresent}\r\n            textFieldOnChange={handleEnglishPresentChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n        </div>\r\n        <hr className=\"mt-8\" />\r\n        <div className=\"sm:flex sm:justify-center sm:px-5 md:px-10 sm:space-x-8 md:space-x-6 lg:space-x-10\">\r\n          {[\"past\", \"present\"].map((tenseName, tenseNameIndex) => {\r\n            return (\r\n              <React.Fragment key={tenseName}>\r\n                <div className=\"flex flex-col space-y-2 mt-4\">\r\n                  <h2 className=\"font-bold text-xl mb-2 md:text-right\">\r\n                    {capitalize(tenseName)} Tense\r\n                  </h2>\r\n                  {pronounObjectsArray.map((pronounObject, index) => {\r\n                    return (\r\n                      <LabelAndTextField\r\n                        divClassName={GENERAL_DIV_CLASS_NAME}\r\n                        textFieldClassName={\r\n                          verbToAdd.isRegular\r\n                            ? \"autocomplete-field\"\r\n                            : \"normal-input\"\r\n                        }\r\n                        textFieldPlaceHolder={\r\n                          verbToAdd.isRegular ? \"Box will autocomplete\" : \"\"\r\n                        }\r\n                        key={pronounObject.code + \"0\"}\r\n                        labelText={pronounObject.display}\r\n                        sharedId={pronounObject.code + \"0\"}\r\n                        textFieldValue={verbToAdd[tenseName][index]}\r\n                        textFieldOnChange={(e) =>\r\n                          handleArrayInputChange(e, tenseName, index)\r\n                        }\r\n                        requireTextField={true}\r\n                        disableTextField={verbToAdd.isRegular ? true : false}\r\n                        maxLength={25}\r\n                        textFieldTabIndex={props.displayed ? 0 : -1}\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n                {tenseNameIndex !== -1 ? <hr className=\"mt-8\" /> : null}\r\n              </React.Fragment>\r\n            );\r\n          })}\r\n        </div>\r\n        <button\r\n          className={`mt-4 button bg-yellow-300 px-4 py-2 hover:bg-yellow-700 sm:mx-auto sm:block sm:mt-12 lg:mt-16`}\r\n          type=\"submit\"\r\n          tabIndex={props.displayed ? 0 : -1}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { capitalize } from \"../helper-functions\";\r\nimport VerbAdditionWindow from \"./verb-addition-window\";\r\n\r\nconst DEFAULT_VERB = {\r\n  spanishInfinitive: \"\",\r\n  englishPast: \"\",\r\n  englishPresent: \"\",\r\n  past: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  present: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  isRegular: true,\r\n};\r\n\r\nexport default function VerbManager(props) {\r\n  const [verbToAdd, setVerbToAdd] = useState(DEFAULT_VERB);\r\n  const outerDivRef = useRef(null);\r\n\r\n  const vawIsDisplayed = props.vawIsDisplayed;\r\n  const setVawIsDisplayed = props.setVawIsDisplayed;\r\n  const selectedVerbs = props.selectedVerbs;\r\n  const setSelectedVerbs = props.setSelectedVerbs;\r\n  const listOfVerbs = props.listOfVerbs;\r\n  const setListOfVerbs = props.setListOfVerbs;\r\n\r\n  function resetVaw() {\r\n    setVawIsDisplayed(false);\r\n    setVerbToAdd(DEFAULT_VERB);\r\n    outerDivRef.current.scrollTop = 0;\r\n    document.activeElement.blur();\r\n  }\r\n\r\n  function handleEditVerb(e) {\r\n    setVerbToAdd(JSON.parse(e.currentTarget.getAttribute(\"data-verb-object\")));\r\n    setVawIsDisplayed(true);\r\n  }\r\n\r\n  function handleVerbSelection(e, clickedVerbObject) {\r\n    e.stopPropagation();\r\n    const updatedSelectedVerbs = selectedVerbs.slice();\r\n    const index = updatedSelectedVerbs.findIndex(\r\n      (selectedVerbObject) =>\r\n        selectedVerbObject.spanishInfinitive ===\r\n        clickedVerbObject.spanishInfinitive\r\n    );\r\n    if (index !== -1) {\r\n      updatedSelectedVerbs.splice(index, 1);\r\n    } else {\r\n      updatedSelectedVerbs.push(clickedVerbObject);\r\n    }\r\n    setSelectedVerbs(updatedSelectedVerbs);\r\n  }\r\n\r\n  function handleDeleteVerb() {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    if (updatedListOfVerbs.length === 1) {\r\n      window.alert(\"Cannot delete last remaining verb.\");\r\n    } else {\r\n      let indexToDelete;\r\n      for (const selectedVerbObject of selectedVerbs) {\r\n        for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n          if (\r\n            selectedVerbObject.spanishInfinitive ===\r\n            updatedListOfVerbs[i].spanishInfinitive\r\n          ) {\r\n            indexToDelete = i;\r\n            break;\r\n          }\r\n        }\r\n        updatedListOfVerbs.splice(indexToDelete, 1);\r\n      }\r\n      if (updatedListOfVerbs.length !== 0) {\r\n        setListOfVerbs(updatedListOfVerbs);\r\n        setSelectedVerbs([]);\r\n      } else {\r\n        window.alert(\"Cannot delete last remaining verb.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleVerbSubmit(newVerb, submitType) {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    let foundMatchingInfinitive = false;\r\n    for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n      if (\r\n        newVerb.spanishInfinitive === updatedListOfVerbs[i].spanishInfinitive\r\n      ) {\r\n        foundMatchingInfinitive = true;\r\n        updatedListOfVerbs[i] = newVerb;\r\n        break;\r\n      }\r\n    }\r\n    if (!foundMatchingInfinitive) {\r\n      updatedListOfVerbs.push(newVerb);\r\n    }\r\n    setListOfVerbs(updatedListOfVerbs);\r\n    resetVaw();\r\n  }\r\n\r\n  let deleteButtonContent = (\r\n    <>\r\n      <span className=\"font-black\">-</span> Delete Verb\r\n      {selectedVerbs.length > 1 ? \"s\" : \"\"}\r\n    </>\r\n  );\r\n  let deleteButtonClassName =\r\n    \"button bg-warmGray-300 text-warmGray-500 cursor-default\";\r\n  let deleteButtonIsDisabled = true;\r\n  if (\r\n    selectedVerbs.length !== 0 &&\r\n    listOfVerbs.length !== selectedVerbs.length\r\n  ) {\r\n    deleteButtonIsDisabled = false;\r\n    deleteButtonClassName = \"button button-off active:bg-red-900\";\r\n    deleteButtonContent = (\r\n      <>\r\n        <span className=\"text-red-700 font-black\">-</span> Delete Verb\r\n        {selectedVerbs.length > 1 ? \"s\" : \"\"}\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"px-8 py-4 md:w-1/2 xl:w-1/3\" ref={props.selfRef}>\r\n        <h1 className=\"font-black text-4xl uppercase\">Manage Verbs</h1>\r\n        <div className=\"flex space-x-4 mt-8\">\r\n          <button\r\n            onClick={() => {\r\n              setVawIsDisplayed(true);\r\n            }}\r\n            className=\"button stateless-button px-2 py-1\"\r\n          >\r\n            <span className=\"text-blue-700 font-black\">+</span> Add New Verb\r\n          </button>\r\n          <button\r\n            onClick={handleDeleteVerb}\r\n            className={`${deleteButtonClassName} px-2 py-1`}\r\n            disabled={deleteButtonIsDisabled}\r\n          >\r\n            {deleteButtonContent}\r\n          </button>\r\n        </div>\r\n        <ul className=\"list-disc list-inside mt-8\">\r\n          <li className=\"subtitle-text\">Double click a verb row to edit it</li>\r\n          {/* <li className=\"subtitle-text mt-2\">Tap and hold to edit on mobile</li> */}\r\n          <li className=\"subtitle-text mt-2\">Click/tap anywhere to deselect</li>\r\n        </ul>\r\n\r\n        <table className=\"mt-8 simple-table\">\r\n          <thead className=\"subtitle-text\">\r\n            <tr>\r\n              <th>Spanish Infinitive</th>\r\n              <th>English Infinitive</th>\r\n              <th className=\"hidden lg:table-cell\">Ending Type</th>\r\n              <th className=\"hidden lg:table-cell\">Is Regular?</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listOfVerbs.map((verbObject) => {\r\n              let className = \"hover:bg-warmGray-400\";\r\n              for (const selectedVerbObject of selectedVerbs) {\r\n                if (\r\n                  verbObject.spanishInfinitive ===\r\n                  selectedVerbObject.spanishInfinitive\r\n                ) {\r\n                  className = \"bg-blue-300 hover:bg-blue-400\";\r\n                }\r\n              }\r\n\r\n              return (\r\n                <React.Fragment key={verbObject.spanishInfinitive}>\r\n                  <tr\r\n                    onDoubleClick={handleEditVerb}\r\n                    onClick={(e) => handleVerbSelection(e, verbObject)}\r\n                    data-verb-object={JSON.stringify(verbObject)}\r\n                    className={`${className} cursor-pointer`}\r\n                  >\r\n                    <td>{capitalize(verbObject.spanishInfinitive)}</td>\r\n                    <td>To {verbObject.englishPresent}</td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular\r\n                        ? verbObject.spanishInfinitive.slice(-2)\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular ? \"Regular\" : \"Irregular\"}\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <div\r\n        className={`fixed inset-0 z-10 bg-black bg-opacity-50 ${\r\n          vawIsDisplayed ? \"block\" : \"hidden\"\r\n        }`}\r\n        onClick={() => {\r\n          resetVaw();\r\n        }}\r\n      ></div>\r\n      <VerbAdditionWindow\r\n        resetVaw={resetVaw}\r\n        outerDivRef={outerDivRef}\r\n        displayed={vawIsDisplayed}\r\n        setDisplayed={setVawIsDisplayed}\r\n        verbToAdd={verbToAdd}\r\n        setVerbToAdd={setVerbToAdd}\r\n        handleSubmit={handleVerbSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction ToggleButtonList(props) {\r\n  return (\r\n    <ul className={props.listClassNames}>\r\n      {props.labelsArray.map((label, index) => {\r\n        let stateClassName;\r\n        let stateMarker;\r\n        if (props.valuesArray[index]) {\r\n          stateClassName = props.onStyle;\r\n          stateMarker = props.onMarker;\r\n        } else {\r\n          stateClassName = props.offStyle;\r\n          stateMarker = props.offMarker;\r\n        }\r\n\r\n        return (\r\n          <li key={label + String(index)}>\r\n            <button\r\n              className={`${props.buttonStyle} ${stateClassName}`}\r\n              onClick={() => props.handleButtonClick(index)}\r\n              tabIndex={props.buttonTabIndex || \"0\"}\r\n            >\r\n              {label} {stateMarker}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nToggleButtonList.propTypes = {\r\n  listClassNames: PropTypes.string,\r\n  buttonStyle: PropTypes.string,\r\n  onStyle: PropTypes.string,\r\n  onMarker: PropTypes.element,\r\n  offStyle: PropTypes.string,\r\n  offMarker: PropTypes.element,\r\n  labelsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  valuesArray: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n  handleButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToggleButtonList;\r\n","import React from \"react\";\r\nimport ToggleButtonList from \"../general-components/toggle-button-list\";\r\nimport {\r\n  randomChoice,\r\n  capitalize,\r\n  makeSentenceObject,\r\n} from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDown,\r\n  faAngleRight,\r\n  faCheckSquare,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// =======================\r\n\r\nexport default class Practice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: null,\r\n      answers: null,\r\n      input: \"\",\r\n      feedbackMessage: null,\r\n      selectedTenses: [false, true, true],\r\n    };\r\n    this.clearInputAndNewQuestion = this.clearInputAndNewQuestion.bind(this);\r\n    this.handleTenseChange = this.handleTenseChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  handleTenseChange = (updatedTenseIndex) => {\r\n    const updatedTenses = this.state.selectedTenses.map((tense, index) => {\r\n      return updatedTenseIndex === index ? !tense : tense;\r\n    });\r\n\r\n    if (updatedTenses.indexOf(true) === -1) {\r\n      window.alert(\"Make sure you have at least one tense selected.\");\r\n    } else {\r\n      this.setState({ selectedTenses: updatedTenses });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    this.setState({ input: inputValue });\r\n  };\r\n\r\n  handleNewQuestion = () => {\r\n    let tenseNumbers = [];\r\n    this.state.selectedTenses.forEach((tenseBool, index) => {\r\n      if (tenseBool) {\r\n        tenseNumbers.push(index);\r\n      }\r\n    });\r\n    const sentenceObject = makeSentenceObject(\r\n      randomChoice(this.props.listOfVerbs),\r\n      randomChoice(tenseNumbers)\r\n    );\r\n    this.setState({\r\n      question: sentenceObject.englishSentence,\r\n      answers: sentenceObject.spanishSentencesObject,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const answers = this.state.answers;\r\n\r\n    // process input\r\n    const trimmedInput = this.state.input.trim().toLowerCase();\r\n    let inputWordsArray = [];\r\n    let processedWord = [];\r\n    for (let i = 0; i < trimmedInput.length; i++) {\r\n      if (trimmedInput.charAt(i) !== \" \") {\r\n        if (i === trimmedInput.length - 1) {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n          inputWordsArray.push(processedWord.join(\"\"));\r\n          processedWord = [];\r\n        } else {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n        }\r\n      } else {\r\n        inputWordsArray.push(processedWord.join(\"\"));\r\n        processedWord = [];\r\n      }\r\n    }\r\n    inputWordsArray = inputWordsArray.filter((word) => word);\r\n\r\n    // check processed input against both spanish sentences\r\n    let isCorrect = true;\r\n    let userInputSpansArray = [];\r\n    if (\r\n      inputWordsArray.join(\" \") === answers.prodropArray.join(\" \") ||\r\n      inputWordsArray.join(\" \") === answers.normalArray.join(\" \")\r\n    ) {\r\n      userInputSpansArray.push(\r\n        <span className={\"correct-feedback\"} key={inputWordsArray.join(\" \")}>\r\n          {inputWordsArray.join(\" \")}\r\n        </span>\r\n      );\r\n    } else {\r\n      isCorrect = false;\r\n      // if incorrect number of words\r\n      if (inputWordsArray.length !== answers.normalArray.length) {\r\n        userInputSpansArray.push(\r\n          <span className={\"wrong-feedback\"} key={inputWordsArray.join(\" \")}>\r\n            {inputWordsArray.join(\" \")}\r\n          </span>\r\n        );\r\n      } else {\r\n        // word by word coloring feedback\r\n        inputWordsArray.forEach((word, index) => {\r\n          let endSpace = \" \";\r\n          if (index === answers.normalArray.length - 1) {\r\n            endSpace = \"\";\r\n          }\r\n          if (word === answers.normalArray[index]) {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"correct-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"wrong-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      feedbackMessage: {\r\n        question: this.state.question.join(\" \"),\r\n        isCorrect: isCorrect,\r\n        userInputSpansArray: userInputSpansArray,\r\n        actualAnswer: answers.normalArray.join(\" \"),\r\n      },\r\n      input: \"\",\r\n    });\r\n\r\n    this.handleNewQuestion();\r\n  };\r\n\r\n  clearInputAndNewQuestion() {\r\n    this.setState({ input: \"\" });\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  // ================== RENDER =====================================\r\n\r\n  render() {\r\n    const question = this.state.question;\r\n    const input = this.state.input;\r\n    const feedbackMessage = this.state.feedbackMessage;\r\n    const selectedTenses = this.state.selectedTenses;\r\n\r\n    let feedbackSectionContents;\r\n    if (!feedbackMessage) {\r\n      feedbackSectionContents = (\r\n        <>\r\n          <p>...</p>\r\n          <p>English phrase: </p>\r\n          <p>Your answer: </p>\r\n          <p>Correct answer: </p>\r\n        </>\r\n      );\r\n    } else {\r\n      feedbackSectionContents = (\r\n        <>\r\n          {feedbackMessage.isCorrect ? (\r\n            <p className=\"font-bold text-blue-700\">CORRECT</p>\r\n          ) : (\r\n            <p className=\"font-bold text-red-700\">INCORRECT</p>\r\n          )}\r\n          <p>English phrase: {capitalize(feedbackMessage.question)}</p>\r\n          <p>Your answer: {feedbackMessage.userInputSpansArray}</p>\r\n          <p>Correct answer: {feedbackMessage.actualAnswer}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section\r\n        ref={this.props.selfRef}\r\n        className=\"px-8 pt-4 pb-10 md:w-1/2 xl:w-1/3\"\r\n      >\r\n        <header className=\"pb-4\">\r\n          <h1 className=\"font-black text-4xl uppercase\">Practice</h1>\r\n          <h2 className=\"mt-8\">Select Tenses:</h2>\r\n          <ToggleButtonList\r\n            listClassNames=\"flex space-x-2 mt-1\"\r\n            buttonStyle=\"button mt-2 px-2 py-1 group\"\r\n            onStyle=\"button-on\"\r\n            onMarker={\r\n              <FontAwesomeIcon\r\n                icon={faCheckSquare}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-on-button\"\r\n              />\r\n            }\r\n            offStyle=\"button-off\"\r\n            offMarker={\r\n              <FontAwesomeIcon\r\n                icon={faTimesCircle}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-off-button\"\r\n              />\r\n            }\r\n            labelsArray={[\"Past\", \"Present\", \"Future\"]}\r\n            valuesArray={selectedTenses}\r\n            handleButtonClick={this.handleTenseChange}\r\n            buttonTabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n          />\r\n          <button\r\n            className=\"button stateless-button mt-2 px-2 py-1\"\r\n            onClick={this.clearInputAndNewQuestion}\r\n            tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n          >\r\n            Generate Different Question\r\n          </button>\r\n          <hr className=\"mt-4\" />\r\n          <p className=\"mt-4 subtitle-text tracking-wider text-xs\">\r\n            Translate the following english phrase into spanish:{\" \"}\r\n          </p>\r\n          <p className=\"text-2xl font-bold\">\r\n            {question ? capitalize(question.join(\" \")) : null}\r\n          </p>\r\n        </header>\r\n        <div>\r\n          <form className=\"flex space-x-2\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"normal-input flex-grow\"\r\n              placeholder=\"Enter answer here...\"\r\n              type=\"text\"\r\n              required\r\n              value={input}\r\n              onChange={(e) => this.handleInputChange(e)}\r\n              maxLength=\"50\"\r\n              tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n            />\r\n            <button\r\n              className=\"button stateless-button px-4 py-1\"\r\n              type=\"submit\"\r\n              tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n            >\r\n              <FontAwesomeIcon icon={faAngleRight} />\r\n            </button>\r\n          </form>\r\n\r\n          <section className=\"mt-2 lg:mt-8\">{feedbackSectionContents}</section>\r\n          <a\r\n            href=\"#verb-manager\"\r\n            className=\"text-center block mt-32 font-semibold md:hidden\"\r\n            onClick={() => {\r\n              this.props.sectionBelow.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            Manage which verbs you're tested on\r\n            <br />\r\n            <FontAwesomeIcon icon={faAngleDown} />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport VerbManager from \"./verb-management/verb-manager\";\nimport Practice from \"./practice/practice\";\nimport defaultLov from \"./default-lov.json\";\nimport \"./index.css\";\n\n// =======================\n\nfunction App() {\n  const [listOfVerbs, setListOfVerbs] = useState(JSON.parse(defaultLov));\n  const verbManagerRef = useRef(null);\n  const practiceRef = useRef(null);\n  const [selectedVerbs, setSelectedVerbs] = useState([]);\n  const [vawIsDisplayed, setVawIsDisplayed] = useState(false);\n\n  return (\n    <>\n      <main\n        onClick={() => {\n          setSelectedVerbs([]);\n        }}\n        className=\"md:flex md:justify-center md:pt-28 min-h-screen pb-44\"\n      >\n        <Practice\n          listOfVerbs={listOfVerbs}\n          sectionBelow={verbManagerRef}\n          selfRef={practiceRef}\n          vawIsDisplayed={vawIsDisplayed}\n        />\n        <VerbManager\n          vawIsDisplayed={vawIsDisplayed}\n          setVawIsDisplayed={setVawIsDisplayed}\n          selectedVerbs={selectedVerbs}\n          setSelectedVerbs={setSelectedVerbs}\n          selfRef={verbManagerRef}\n          listOfVerbs={listOfVerbs}\n          setListOfVerbs={setListOfVerbs}\n          sectionAbove={practiceRef}\n        />\n      </main>\n      <footer className=\"text-center text-warmGray-700 text-xs py-2 bg-blue-300\">\n        By Bogdan Kapelyukh\n      </footer>\n    </>\n  );\n}\n\n// =======================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}