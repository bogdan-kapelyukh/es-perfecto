{"version":3,"sources":["helper-functions.js","general-components/label-and-text-field.js","verb-management/verb-addition-window.js","verb-management/verb-manager.js","general-components/toggle-button-list.js","practice/practice.js","index.js"],"names":["capitalize","string","charAt","toUpperCase","slice","randomChoice","array","Math","floor","random","length","checkOnlySpanishCharacters","test","window","alert","LabelAndTextField","divClassName","textFieldClassName","textFieldPlaceHolder","labelText","sharedId","textFieldValue","textFieldOnChange","requireTextField","disableTextField","maxLength","textFieldTabIndex","className","htmlFor","id","type","value","onChange","placeholder","required","disabled","tabIndex","GENERAL_DIV_CLASS_NAME","IMPORTANT_FIELD_DIV_CLASS_NAME","VerbAdditionWindow","props","verbToAdd","setVerbToAdd","pronounObjectsArray","code","display","handleArrayInputChange","e","arrayToChange","indexToChange","target","newItem","newArray","changeOneItem","toLowerCase","displayed","ref","outerDivRef","onClick","resetVaw","icon","faTimesCircle","onSubmit","preventDefault","past","indexOf","present","handleSubmit","isRegular","name","checked","faQuestionCircle","spanishInfinitive","conjugationObject","infinitive","ending","stem","conjugationObj","Array","fill","esConjugate","englishPast","englishPresent","map","pronounObject","index","DEFAULT_VERB","VerbManager","useState","useRef","vawIsDisplayed","setVawIsDisplayed","selectedVerbs","setSelectedVerbs","listOfVerbs","setListOfVerbs","current","scrollTop","document","activeElement","blur","handleEditVerb","JSON","parse","currentTarget","getAttribute","deleteButtonContent","deleteButtonClassName","deleteButtonIsDisabled","selfRef","updatedListOfVerbs","indexToDelete","selectedVerbObject","i","splice","verbObject","Fragment","onDoubleClick","clickedVerbObject","stopPropagation","updatedSelectedVerbs","findIndex","push","handleVerbSelection","stringify","setDisplayed","newVerb","submitType","foundMatchingInfinitive","ToggleButtonList","listClassNames","labelsArray","label","stateClassName","stateMarker","valuesArray","onStyle","onMarker","offStyle","offMarker","buttonStyle","handleButtonClick","buttonTabIndex","String","Practice","handleTenseChange","updatedTenseIndex","updatedTenses","state","selectedTenses","tense","setState","handleInputChange","inputValue","input","handleNewQuestion","tenseNumbers","forEach","tenseBool","sentenceObject","spanishSentencesObject","englishSentence","irConjugation","spanish","english","conjugationIndex","yo","tú","él","ella","usted","nosotros","nosotras","vosotros","vosotras","ellos","ellas","ustedes","normalArray","prodropArray","console","error","makeSentenceObject","question","answers","trimmedInput","trim","inputWordsArray","processedWord","join","filter","word","isCorrect","userInputSpansArray","endSpace","toString","feedbackMessage","actualAnswer","clearInputAndNewQuestion","bind","this","feedbackSectionContents","faCheckSquare","style","width","faAngleRight","href","sectionBelow","scrollIntoView","behavior","faAngleDown","React","Component","App","defaultLov","verbManagerRef","practiceRef","sectionAbove","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.933554ff.chunk.js","sourcesContent":["export function capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function randomChoice(array) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport function esConjugate(infinitive) {\r\n  const ending = infinitive.slice(-2);\r\n  const stem = infinitive.slice(0, -2);\r\n  let conjugationObj = {};\r\n  if (ending === \"ar\") {\r\n    conjugationObj.past = [\r\n      stem + \"é\",\r\n      stem + \"aste\",\r\n      stem + \"ó\",\r\n      stem + \"amos\",\r\n      stem + \"asteis\",\r\n      stem + \"aron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"as\",\r\n      stem + \"a\",\r\n      stem + \"amos\",\r\n      stem + \"áis\",\r\n      stem + \"an\",\r\n    ];\r\n  } else if (ending === \"er\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"emos\",\r\n      stem + \"éis\",\r\n      stem + \"en\",\r\n    ];\r\n  } else if (ending === \"ir\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"imos\",\r\n      stem + \"ís\",\r\n      stem + \"en\",\r\n    ];\r\n  } else {\r\n    conjugationObj.past = Array(6).fill(infinitive);\r\n    conjugationObj.present = Array(6).fill(infinitive);\r\n  }\r\n  return conjugationObj;\r\n}\r\n\r\nexport function checkOnlySpanishCharacters(string) {\r\n  if (!/^[a-záéíóúüñ]*$/i.test(string)) {\r\n    window.alert(\r\n      \"Please only type letters that are in the spanish alphabet: a-z and áéíóúüñ\"\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function makeSentenceObject(verbObject, tense) {\r\n  const pronounObjectsArray = [\r\n    { spanish: \"yo\", english: \"i\" },\r\n    { spanish: \"tú\", english: \"you (informal)\" },\r\n    { spanish: \"él\", english: \"he\" },\r\n    { spanish: \"ella\", english: \"she\" },\r\n    { spanish: \"usted\", english: \"you (formal)\" },\r\n    { spanish: \"nosotros\", english: \"we (m)\" },\r\n    { spanish: \"nosotras\", english: \"we (f)\" },\r\n    { spanish: \"vosotros\", english: \"you (pl, m)\" },\r\n    { spanish: \"vosotras\", english: \"you (pl, f)\" },\r\n    { spanish: \"ellos\", english: \"they (m)\" },\r\n    { spanish: \"ellas\", english: \"they (f)\" },\r\n    { spanish: \"ustedes\", english: \"they (formal)\" },\r\n  ];\r\n  const irConjugation = [\"voy\", \"vas\", \"va\", \"vamos\", \"váis\", \"van\"];\r\n  const toBeConjugation = [\"am\", \"are\", \"is\", \"are\", \"are\", \"are\"];\r\n  const pronounIndexObject = {\r\n    yo: 0,\r\n    tú: 1,\r\n    él: 2,\r\n    ella: 2,\r\n    usted: 2,\r\n    nosotros: 3,\r\n    nosotras: 3,\r\n    vosotros: 4,\r\n    vosotras: 4,\r\n    ellos: 5,\r\n    ellas: 5,\r\n    ustedes: 5,\r\n  };\r\n\r\n  let pronounObject = randomChoice(pronounObjectsArray);\r\n\r\n  let spanishSentencesObject;\r\n  let englishSentence;\r\n  const conjugationIndex = pronounIndexObject[pronounObject.spanish];\r\n  if (tense === 0) {\r\n    spanishSentencesObject = {\r\n      normalArray: [pronounObject.spanish, verbObject.past[conjugationIndex]],\r\n      prodropArray: [verbObject.past[conjugationIndex]],\r\n    };\r\n    englishSentence = [pronounObject.english, verbObject.englishPast];\r\n  } else if (tense === 1) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        verbObject.present[conjugationIndex],\r\n      ],\r\n      prodropArray: [verbObject.present[conjugationIndex]],\r\n    };\r\n    if (pronounObject.spanish === \"él\" || pronounObject.spanish === \"ella\") {\r\n      englishSentence = [\r\n        pronounObject.english,\r\n        verbObject.englishPresent + \"s\",\r\n      ];\r\n    } else {\r\n      englishSentence = [pronounObject.english, verbObject.englishPresent];\r\n    }\r\n  } else if (tense === 2) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n      prodropArray: [\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n    };\r\n    englishSentence = [\r\n      pronounObject.english,\r\n      pronounObject.spanish !== \"usted\"\r\n        ? toBeConjugation[conjugationIndex]\r\n        : \"are\",\r\n      \"going\",\r\n      \"to\",\r\n      verbObject.englishPresent,\r\n    ];\r\n  } else {\r\n    console.error(\r\n      `Invalid tense argument passed to makeSentenceObject function: ${tense}`\r\n    );\r\n  }\r\n\r\n  return {\r\n    spanishSentencesObject: spanishSentencesObject,\r\n    englishSentence: englishSentence,\r\n  };\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction LabelAndTextField({\r\n  divClassName,\r\n  textFieldClassName,\r\n  textFieldPlaceHolder,\r\n  labelText,\r\n  sharedId,\r\n  textFieldValue,\r\n  textFieldOnChange,\r\n  requireTextField,\r\n  disableTextField,\r\n  maxLength,\r\n  textFieldTabIndex,\r\n}) {\r\n  return (\r\n    <div className={divClassName}>\r\n      <label htmlFor={sharedId}>{labelText}</label>\r\n      <input\r\n        id={sharedId}\r\n        className={textFieldClassName}\r\n        type=\"text\"\r\n        value={textFieldValue}\r\n        onChange={textFieldOnChange}\r\n        placeholder={textFieldPlaceHolder}\r\n        required={requireTextField}\r\n        disabled={disableTextField}\r\n        maxLength={maxLength}\r\n        tabIndex={textFieldTabIndex}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nLabelAndTextField.propTypes = {\r\n  sharedId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LabelAndTextField;\r\n","import React from \"react\";\r\nimport { esConjugate, checkOnlySpanishCharacters } from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimesCircle,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport LabelAndTextField from \"../general-components/label-and-text-field\";\r\n\r\nconst GENERAL_DIV_CLASS_NAME =\r\n  \"flex flex-col lg:flex-row lg:items-center lg:space-x-2 space-y-2\";\r\n\r\nconst IMPORTANT_FIELD_DIV_CLASS_NAME = \"flex flex-col space-y-2\";\r\n\r\nexport default function VerbAdditionWindow(props) {\r\n  const verbToAdd = props.verbToAdd;\r\n  const setVerbToAdd = props.setVerbToAdd;\r\n\r\n  const pronounObjectsArray = [\r\n    { code: \"yo\", display: \"Yo\" },\r\n    { code: \"tú\", display: \"Tú\" },\r\n    { code: \"él\", display: \"Él/ella/usted\" },\r\n    { code: \"nosotros\", display: \"Nosotros/nosotras\" },\r\n    { code: \"vosotros\", display: \"Vosotros/vosotras\" },\r\n    { code: \"ellos\", display: \"Ellos/ellas/ustedes\" },\r\n  ];\r\n\r\n  function changeOneItem(arrayToChange, indexToChange, newItem) {\r\n    const newArray = arrayToChange.slice();\r\n    newArray[indexToChange] = newItem;\r\n    return newArray;\r\n  }\r\n\r\n  function handleInfinitiveChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd(() => {\r\n      const spanishInfinitive = e.target.value.toLowerCase();\r\n      if (verbToAdd.isRegular) {\r\n        const conjugationObject = esConjugate(spanishInfinitive);\r\n        return {\r\n          ...verbToAdd,\r\n          spanishInfinitive: spanishInfinitive,\r\n          past: conjugationObject.past,\r\n          present: conjugationObject.present,\r\n        };\r\n      }\r\n      return { ...verbToAdd, spanishInfinitive: spanishInfinitive };\r\n    });\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [e.target.id]: e.target.value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  function handleEnglishPresentChange(e) {\r\n    if (/to /i.test(e.target.value)) {\r\n      window.alert(\r\n        \"Please enter the present tense english as just one word e.g. 'speak'\\nNOT 'to speak'\"\r\n      );\r\n      setVerbToAdd({\r\n        ...verbToAdd,\r\n        englishPresent: \"\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      englishPresent: e.target.value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  function handleArrayInputChange(e, arrayToChange, indexToChange) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [arrayToChange]: changeOneItem(\r\n        verbToAdd[arrayToChange],\r\n        indexToChange,\r\n        e.target.value.toLowerCase()\r\n      ),\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (\r\n      verbToAdd.past.indexOf(\"\") === -1 &&\r\n      verbToAdd.present.indexOf(\"\") === -1\r\n    ) {\r\n      props.handleSubmit(verbToAdd);\r\n    } else {\r\n      window.alert(\"Make sure all fields are filled in.\");\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    props.resetVaw();\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 z-20 overflow-scroll bg-gray-50 px-10 py-8 ${\r\n        props.displayed\r\n          ? \"transform-none transition-transform duration-500 visible\"\r\n          : \"transform translate-y-full transition-transform duration-500 invisible\"\r\n      }\r\n      lg:w-max\r\n      lg:mx-auto\r\n      lg:overflow-y-auto\r\n      `}\r\n      ref={props.outerDivRef}\r\n    >\r\n      <div className=\"flex\">\r\n        <h1 className=\"font-black text-4xl uppercase\">Add/edit a verb</h1>\r\n        <button\r\n          onClick={handleClose}\r\n          className=\"ml-auto text-4xl\"\r\n          tabIndex={props.displayed ? 0 : -1}\r\n        >\r\n          <FontAwesomeIcon\r\n            icon={faTimesCircle}\r\n            className=\"hover:text-blue-700\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <form\r\n        className=\"mt-10\"\r\n        onSubmit={handleSubmit}\r\n        // disabled={!props.displayed}\r\n      >\r\n        <p className=\"font-bold text-xl\">The verb is ...</p>\r\n        <p className=\"font-normal text-gray-500 text-base leading-tight mt-2\">\r\n          Regular verbs will autocomplete entries based on what is in the\r\n          'Spanish infinitive' box\r\n        </p>\r\n        <ul className=\"flex space-x-2 mt-4\">\r\n          <li\r\n            className={`button flex space-x-2 items-center px-2 py-1 border-2  ${\r\n              verbToAdd.isRegular\r\n                ? \"button-on border-blue-700\"\r\n                : \"button-off border-transparent\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n          >\r\n            <label htmlFor=\"regular\">Regular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"regular\"\r\n              value=\"true\"\r\n              checked={verbToAdd.isRegular === true}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n              tabIndex={props.displayed ? 0 : -1}\r\n            />\r\n          </li>\r\n          <li\r\n            className={`flex space-x-2 items-center button px-2 py-1 border-2 ${\r\n              !verbToAdd.isRegular\r\n                ? \"button-on border-blue-700\"\r\n                : \"button-off border-transparent\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n          >\r\n            <label htmlFor=\"irregular\">Irregular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"irregular\"\r\n              value=\"false\"\r\n              checked={verbToAdd.isRegular === false}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n              tabIndex={props.displayed ? 0 : -1}\r\n            />\r\n          </li>\r\n        </ul>\r\n        <hr className=\"mt-4\" />\r\n        <div className=\"flex flex-col lg:flex-row lg:justify-center lg:space-x-8 space-y-2 lg:space-y-0 mt-4\">\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                Spanish Infinitive <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"spanishInfinitive\"\r\n            textFieldValue={verbToAdd.spanishInfinitive}\r\n            textFieldOnChange={handleInfinitiveChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Past <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPast\"\r\n            textFieldValue={verbToAdd.englishPast}\r\n            textFieldOnChange={handleInputChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Present <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPresent\"\r\n            textFieldValue={verbToAdd.englishPresent}\r\n            textFieldOnChange={handleEnglishPresentChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n            textFieldTabIndex={props.displayed ? 0 : -1}\r\n          />\r\n        </div>\r\n        <hr className=\"mt-8\" />\r\n        <div className=\"lg:flex lg:justify-center lg:px-10 lg:space-x-10\">\r\n          <div className=\"flex flex-col space-y-2 mt-4\">\r\n            <h2 className=\"font-bold text-xl mb-2\">Past Tense</h2>\r\n            {pronounObjectsArray.map((pronounObject, index) => {\r\n              return (\r\n                <LabelAndTextField\r\n                  divClassName={GENERAL_DIV_CLASS_NAME}\r\n                  textFieldClassName={\r\n                    verbToAdd.isRegular ? \"autocomplete-field\" : \"normal-input\"\r\n                  }\r\n                  textFieldPlaceHolder={\r\n                    verbToAdd.isRegular ? \"Box will autocomplete\" : \"\"\r\n                  }\r\n                  key={pronounObject.code + \"0\"}\r\n                  labelText={pronounObject.display}\r\n                  sharedId={pronounObject.code + \"0\"}\r\n                  textFieldValue={verbToAdd.past[index]}\r\n                  textFieldOnChange={(e) =>\r\n                    handleArrayInputChange(e, \"past\", index)\r\n                  }\r\n                  requireTextField={true}\r\n                  disableTextField={verbToAdd.isRegular ? true : false}\r\n                  maxLength={25}\r\n                  textFieldTabIndex={props.displayed ? 0 : -1}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <hr className=\"mt-8\" />\r\n          <div className=\"flex flex-col space-y-2 mt-4\">\r\n            <h2 className=\"font-bold text-xl mb-2\">Present Tense</h2>\r\n            {pronounObjectsArray.map((pronounObject, index) => {\r\n              return (\r\n                <LabelAndTextField\r\n                  divClassName={GENERAL_DIV_CLASS_NAME}\r\n                  textFieldClassName={\r\n                    verbToAdd.isRegular ? \"autocomplete-field\" : \"normal-input\"\r\n                  }\r\n                  textFieldPlaceHolder={\r\n                    verbToAdd.isRegular ? \"Box will autocomplete\" : \"\"\r\n                  }\r\n                  key={pronounObject.code + \"0\"}\r\n                  labelText={pronounObject.display}\r\n                  sharedId={pronounObject.code + \"0\"}\r\n                  textFieldValue={verbToAdd.present[index]}\r\n                  textFieldOnChange={(e) =>\r\n                    handleArrayInputChange(e, \"present\", index)\r\n                  }\r\n                  requireTextField={true}\r\n                  disableTextField={verbToAdd.isRegular ? true : false}\r\n                  maxLength={25}\r\n                  textFieldTabIndex={props.displayed ? 0 : -1}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <button\r\n          className={`mt-4 button bg-yellow-300 px-4 py-2 hover:bg-yellow-700 lg:mx-auto lg:block lg:mt-16`}\r\n          type=\"submit\"\r\n          tabIndex={props.displayed ? 0 : -1}\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { capitalize } from \"../helper-functions\";\r\nimport VerbAdditionWindow from \"./verb-addition-window\";\r\n\r\nconst DEFAULT_VERB = {\r\n  spanishInfinitive: \"\",\r\n  englishPast: \"\",\r\n  englishPresent: \"\",\r\n  past: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  present: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  isRegular: true,\r\n};\r\n\r\nexport default function VerbManager(props) {\r\n  const [verbToAdd, setVerbToAdd] = useState(DEFAULT_VERB);\r\n  const outerDivRef = useRef(null);\r\n\r\n  const vawIsDisplayed = props.vawIsDisplayed;\r\n  const setVawIsDisplayed = props.setVawIsDisplayed;\r\n  const selectedVerbs = props.selectedVerbs;\r\n  const setSelectedVerbs = props.setSelectedVerbs;\r\n  const listOfVerbs = props.listOfVerbs;\r\n  const setListOfVerbs = props.setListOfVerbs;\r\n\r\n  function resetVaw() {\r\n    setVawIsDisplayed(false);\r\n    setVerbToAdd(DEFAULT_VERB);\r\n    outerDivRef.current.scrollTop = 0;\r\n    document.activeElement.blur();\r\n  }\r\n\r\n  function handleEditVerb(e) {\r\n    setVerbToAdd(JSON.parse(e.currentTarget.getAttribute(\"data-verb-object\")));\r\n    setVawIsDisplayed(true);\r\n  }\r\n\r\n  function handleVerbSelection(e, clickedVerbObject) {\r\n    e.stopPropagation();\r\n    const updatedSelectedVerbs = selectedVerbs.slice();\r\n    const index = updatedSelectedVerbs.findIndex(\r\n      (selectedVerbObject) =>\r\n        selectedVerbObject.spanishInfinitive ===\r\n        clickedVerbObject.spanishInfinitive\r\n    );\r\n    if (index !== -1) {\r\n      updatedSelectedVerbs.splice(index, 1);\r\n    } else {\r\n      updatedSelectedVerbs.push(clickedVerbObject);\r\n    }\r\n    setSelectedVerbs(updatedSelectedVerbs);\r\n  }\r\n\r\n  function handleDeleteVerb() {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    if (updatedListOfVerbs.length === 1) {\r\n      window.alert(\"Cannot delete last remaining verb.\");\r\n    } else {\r\n      let indexToDelete;\r\n      for (const selectedVerbObject of selectedVerbs) {\r\n        for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n          if (\r\n            selectedVerbObject.spanishInfinitive ===\r\n            updatedListOfVerbs[i].spanishInfinitive\r\n          ) {\r\n            indexToDelete = i;\r\n            break;\r\n          }\r\n        }\r\n        updatedListOfVerbs.splice(indexToDelete, 1);\r\n      }\r\n      if (updatedListOfVerbs.length !== 0) {\r\n        setListOfVerbs(updatedListOfVerbs);\r\n        setSelectedVerbs([]);\r\n      } else {\r\n        window.alert(\"Cannot delete last remaining verb.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleVerbSubmit(newVerb, submitType) {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    let foundMatchingInfinitive = false;\r\n    for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n      if (\r\n        newVerb.spanishInfinitive === updatedListOfVerbs[i].spanishInfinitive\r\n      ) {\r\n        foundMatchingInfinitive = true;\r\n        updatedListOfVerbs[i] = newVerb;\r\n        break;\r\n      }\r\n    }\r\n    if (!foundMatchingInfinitive) {\r\n      updatedListOfVerbs.push(newVerb);\r\n    }\r\n    setListOfVerbs(updatedListOfVerbs);\r\n    resetVaw();\r\n  }\r\n\r\n  let deleteButtonContent = (\r\n    <>\r\n      <span className=\"font-black\">-</span> Delete Verb\r\n      {selectedVerbs.length > 1 ? \"s\" : \"\"}\r\n    </>\r\n  );\r\n  let deleteButtonClassName =\r\n    \"button bg-warmGray-300 text-warmGray-500 cursor-default\";\r\n  let deleteButtonIsDisabled = true;\r\n  if (listOfVerbs.length === selectedVerbs.length) {\r\n    // deleteButtonContent = \"Cannot delete all verbs\";\r\n  } else {\r\n    if (selectedVerbs.length === 0) {\r\n      // deleteButtonContent = \"Select a verb to delete it\";\r\n    } else {\r\n      deleteButtonIsDisabled = false;\r\n      deleteButtonClassName = \"button button-off\";\r\n      deleteButtonContent = (\r\n        <>\r\n          <span className=\"text-red-700 font-black\">-</span> Delete Verb\r\n          {selectedVerbs.length > 1 ? \"s\" : \"\"}\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"px-8 py-4\" ref={props.selfRef}>\r\n        <h1 className=\"font-black text-4xl uppercase\">Manage Verbs</h1>\r\n        <div className=\"flex space-x-4 mt-8\">\r\n          <button\r\n            onClick={() => {\r\n              setVawIsDisplayed(true);\r\n            }}\r\n            className=\"button stateless-button px-2 py-1\"\r\n          >\r\n            <span className=\"text-blue-700 font-black\">+</span> Add New Verb\r\n          </button>\r\n          <button\r\n            onClick={handleDeleteVerb}\r\n            className={`${deleteButtonClassName} px-2 py-1`}\r\n            disabled={deleteButtonIsDisabled}\r\n          >\r\n            {deleteButtonContent}\r\n          </button>\r\n        </div>\r\n        <ul className=\"list-disc list-inside mt-8\">\r\n          <li className=\"subtitle-text\">Double click a verb row to edit it</li>\r\n          <li className=\"subtitle-text mt-2\">Tap and hold to edit on mobile</li>\r\n          <li className=\"subtitle-text mt-2\">Click/tap anywhere to deselect</li>\r\n        </ul>\r\n\r\n        <table className=\"mt-8 simple-table\">\r\n          <thead className=\"subtitle-text\">\r\n            <tr>\r\n              <th>Spanish Infinitive</th>\r\n              <th>English Infinitive</th>\r\n              <th className=\"hidden lg:table-cell\">Ending Type</th>\r\n              <th className=\"hidden lg:table-cell\">Is Regular?</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listOfVerbs.map((verbObject) => {\r\n              let className = \"hover:bg-warmGray-400\";\r\n              for (const selectedVerbObject of selectedVerbs) {\r\n                if (\r\n                  verbObject.spanishInfinitive ===\r\n                  selectedVerbObject.spanishInfinitive\r\n                ) {\r\n                  className = \"bg-blue-300 hover:bg-blue-400\";\r\n                }\r\n              }\r\n\r\n              return (\r\n                <React.Fragment key={verbObject.spanishInfinitive}>\r\n                  <tr\r\n                    onDoubleClick={handleEditVerb}\r\n                    onClick={(e) => handleVerbSelection(e, verbObject)}\r\n                    data-verb-object={JSON.stringify(verbObject)}\r\n                    className={`${className} cursor-pointer`}\r\n                  >\r\n                    <td>{capitalize(verbObject.spanishInfinitive)}</td>\r\n                    <td>To {verbObject.englishPresent}</td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular\r\n                        ? verbObject.spanishInfinitive.slice(-2)\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular ? \"Regular\" : \"Irregular\"}\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <div\r\n        className={`fixed inset-0 z-10 bg-black bg-opacity-50 ${\r\n          vawIsDisplayed ? \"block\" : \"hidden\"\r\n        }`}\r\n        onClick={() => {\r\n          resetVaw();\r\n        }}\r\n      ></div>\r\n      <VerbAdditionWindow\r\n        resetVaw={resetVaw}\r\n        outerDivRef={outerDivRef}\r\n        displayed={vawIsDisplayed}\r\n        setDisplayed={setVawIsDisplayed}\r\n        verbToAdd={verbToAdd}\r\n        setVerbToAdd={setVerbToAdd}\r\n        handleSubmit={handleVerbSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction ToggleButtonList(props) {\r\n  return (\r\n    <ul className={props.listClassNames}>\r\n      {props.labelsArray.map((label, index) => {\r\n        let stateClassName;\r\n        let stateMarker;\r\n        if (props.valuesArray[index]) {\r\n          stateClassName = props.onStyle;\r\n          stateMarker = props.onMarker;\r\n        } else {\r\n          stateClassName = props.offStyle;\r\n          stateMarker = props.offMarker;\r\n        }\r\n\r\n        return (\r\n          <li key={label + String(index)}>\r\n            <button\r\n              className={`${props.buttonStyle} ${stateClassName}`}\r\n              onClick={() => props.handleButtonClick(index)}\r\n              tabIndex={props.buttonTabIndex || \"0\"}\r\n            >\r\n              {label} {stateMarker}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nToggleButtonList.propTypes = {\r\n  listClassNames: PropTypes.string,\r\n  buttonStyle: PropTypes.string,\r\n  onStyle: PropTypes.string,\r\n  onMarker: PropTypes.element,\r\n  offStyle: PropTypes.string,\r\n  offMarker: PropTypes.element,\r\n  labelsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  valuesArray: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n  handleButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToggleButtonList;\r\n","import React from \"react\";\r\nimport ToggleButtonList from \"../general-components/toggle-button-list\";\r\nimport {\r\n  randomChoice,\r\n  capitalize,\r\n  makeSentenceObject,\r\n} from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDown,\r\n  faAngleRight,\r\n  faCheckSquare,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// =======================\r\n\r\nexport default class Practice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: null,\r\n      answers: null,\r\n      input: \"\",\r\n      feedbackMessage: null,\r\n      selectedTenses: [false, true, true],\r\n    };\r\n    this.clearInputAndNewQuestion = this.clearInputAndNewQuestion.bind(this);\r\n    this.handleTenseChange = this.handleTenseChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  handleTenseChange = (updatedTenseIndex) => {\r\n    const updatedTenses = this.state.selectedTenses.map((tense, index) => {\r\n      return updatedTenseIndex === index ? !tense : tense;\r\n    });\r\n\r\n    if (updatedTenses.indexOf(true) === -1) {\r\n      window.alert(\"Make sure you have at least one tense selected.\");\r\n    } else {\r\n      this.setState({ selectedTenses: updatedTenses });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    this.setState({ input: inputValue });\r\n  };\r\n\r\n  handleNewQuestion = () => {\r\n    let tenseNumbers = [];\r\n    this.state.selectedTenses.forEach((tenseBool, index) => {\r\n      if (tenseBool) {\r\n        tenseNumbers.push(index);\r\n      }\r\n    });\r\n    const sentenceObject = makeSentenceObject(\r\n      randomChoice(this.props.listOfVerbs),\r\n      randomChoice(tenseNumbers)\r\n    );\r\n    this.setState({\r\n      question: sentenceObject.englishSentence,\r\n      answers: sentenceObject.spanishSentencesObject,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const answers = this.state.answers;\r\n\r\n    // process input\r\n    const trimmedInput = this.state.input.trim().toLowerCase();\r\n    let inputWordsArray = [];\r\n    let processedWord = [];\r\n    for (let i = 0; i < trimmedInput.length; i++) {\r\n      if (trimmedInput.charAt(i) !== \" \") {\r\n        if (i === trimmedInput.length - 1) {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n          inputWordsArray.push(processedWord.join(\"\"));\r\n          processedWord = [];\r\n        } else {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n        }\r\n      } else {\r\n        inputWordsArray.push(processedWord.join(\"\"));\r\n        processedWord = [];\r\n      }\r\n    }\r\n    inputWordsArray = inputWordsArray.filter((word) => word);\r\n\r\n    // check processed input against both spanish sentences\r\n    let isCorrect = true;\r\n    let userInputSpansArray = [];\r\n    if (\r\n      inputWordsArray.join(\" \") === answers.prodropArray.join(\" \") ||\r\n      inputWordsArray.join(\" \") === answers.normalArray.join(\" \")\r\n    ) {\r\n      userInputSpansArray.push(\r\n        <span className={\"correct-feedback\"} key={inputWordsArray.join(\" \")}>\r\n          {inputWordsArray.join(\" \")}\r\n        </span>\r\n      );\r\n    } else {\r\n      isCorrect = false;\r\n      // if incorrect number of words\r\n      if (inputWordsArray.length !== answers.normalArray.length) {\r\n        userInputSpansArray.push(\r\n          <span className={\"wrong-feedback\"} key={inputWordsArray.join(\" \")}>\r\n            {inputWordsArray.join(\" \")}\r\n          </span>\r\n        );\r\n      } else {\r\n        // word by word coloring feedback\r\n        inputWordsArray.forEach((word, index) => {\r\n          let endSpace = \" \";\r\n          if (index === answers.normalArray.length - 1) {\r\n            endSpace = \"\";\r\n          }\r\n          if (word === answers.normalArray[index]) {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"correct-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"wrong-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      feedbackMessage: {\r\n        question: this.state.question.join(\" \"),\r\n        isCorrect: isCorrect,\r\n        userInputSpansArray: userInputSpansArray,\r\n        actualAnswer: answers.normalArray.join(\" \"),\r\n      },\r\n      input: \"\",\r\n    });\r\n\r\n    this.handleNewQuestion();\r\n  };\r\n\r\n  clearInputAndNewQuestion() {\r\n    this.setState({ input: \"\" });\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  // ================== RENDER =====================================\r\n\r\n  render() {\r\n    const question = this.state.question;\r\n    const input = this.state.input;\r\n    const feedbackMessage = this.state.feedbackMessage;\r\n    const selectedTenses = this.state.selectedTenses;\r\n\r\n    let feedbackSectionContents;\r\n    if (!feedbackMessage) {\r\n      feedbackSectionContents = (\r\n        <>\r\n          <p>...</p>\r\n          <p>English phrase: </p>\r\n          <p>Your answer: </p>\r\n          <p>Correct answer: </p>\r\n        </>\r\n      );\r\n    } else {\r\n      feedbackSectionContents = (\r\n        <>\r\n          {feedbackMessage.isCorrect ? (\r\n            <p className=\"font-bold text-blue-700\">CORRECT</p>\r\n          ) : (\r\n            <p className=\"font-bold text-red-700\">INCORRECT</p>\r\n          )}\r\n          <p>English phrase: {capitalize(feedbackMessage.question)}</p>\r\n          <p>Your answer: {feedbackMessage.userInputSpansArray}</p>\r\n          <p>Correct answer: {feedbackMessage.actualAnswer}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section ref={this.props.selfRef} className=\"px-8 pt-4 pb-10\">\r\n        <header className=\"pb-4\">\r\n          <h1 className=\"font-black text-4xl uppercase\">Practice</h1>\r\n          <h2 className=\"mt-8\">Select Tenses:</h2>\r\n          <ToggleButtonList\r\n            listClassNames=\"flex space-x-2 mt-1\"\r\n            buttonStyle=\"button mt-2 px-2 py-1 group\"\r\n            onStyle=\"button-on\"\r\n            onMarker={\r\n              <FontAwesomeIcon\r\n                icon={faCheckSquare}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-on-button\"\r\n              />\r\n            }\r\n            offStyle=\"button-off\"\r\n            offMarker={\r\n              <FontAwesomeIcon\r\n                icon={faTimesCircle}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-off-button\"\r\n              />\r\n            }\r\n            labelsArray={[\"Past\", \"Present\", \"Future\"]}\r\n            valuesArray={selectedTenses}\r\n            handleButtonClick={this.handleTenseChange}\r\n            buttonTabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n          />\r\n          <button\r\n            className=\"button stateless-button mt-2 px-2 py-1\"\r\n            onClick={this.clearInputAndNewQuestion}\r\n            tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n          >\r\n            Generate Different Question\r\n          </button>\r\n          <hr className=\"mt-4\" />\r\n          <p className=\"mt-4 subtitle-text tracking-wider text-xs\">\r\n            Translate the following english phrase into spanish:{\" \"}\r\n          </p>\r\n          <p className=\"text-2xl font-bold\">\r\n            {question ? capitalize(question.join(\" \")) : null}\r\n          </p>\r\n        </header>\r\n        <div>\r\n          <form className=\"flex space-x-2\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"normal-input\"\r\n              placeholder=\"Enter answer here...\"\r\n              type=\"text\"\r\n              required\r\n              value={input}\r\n              onChange={(e) => this.handleInputChange(e)}\r\n              maxLength=\"50\"\r\n              tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n            />\r\n            <button\r\n              className=\"button stateless-button px-4 py-1\"\r\n              type=\"submit\"\r\n              tabIndex={this.props.vawIsDisplayed ? \"-1\" : \"0\"}\r\n            >\r\n              <FontAwesomeIcon icon={faAngleRight} />\r\n            </button>\r\n          </form>\r\n\r\n          <section className=\"mt-2\">{feedbackSectionContents}</section>\r\n          <a\r\n            href=\"#verb-manager\"\r\n            className=\"text-center block mt-32 font-semibold lg:hidden\"\r\n            onClick={() => {\r\n              this.props.sectionBelow.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            Manage which verbs you're tested on\r\n            <br />\r\n            <FontAwesomeIcon icon={faAngleDown} />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport VerbManager from \"./verb-management/verb-manager\";\nimport Practice from \"./practice/practice\";\nimport defaultLov from \"./default-lov.json\";\nimport \"./index.css\";\n\n// =======================\n\nfunction App() {\n  const [listOfVerbs, setListOfVerbs] = useState(JSON.parse(defaultLov));\n  const verbManagerRef = useRef(null);\n  const practiceRef = useRef(null);\n  const [selectedVerbs, setSelectedVerbs] = useState([]);\n  const [vawIsDisplayed, setVawIsDisplayed] = useState(false);\n\n  return (\n    <>\n      <main\n        onClick={() => {\n          setSelectedVerbs([]);\n        }}\n        className=\"lg:flex lg:justify-center lg:pt-28 min-h-screen pb-44\"\n      >\n        <Practice\n          listOfVerbs={listOfVerbs}\n          sectionBelow={verbManagerRef}\n          selfRef={practiceRef}\n          vawIsDisplayed={vawIsDisplayed}\n        />\n        <VerbManager\n          vawIsDisplayed={vawIsDisplayed}\n          setVawIsDisplayed={setVawIsDisplayed}\n          selectedVerbs={selectedVerbs}\n          setSelectedVerbs={setSelectedVerbs}\n          selfRef={verbManagerRef}\n          listOfVerbs={listOfVerbs}\n          setListOfVerbs={setListOfVerbs}\n          sectionAbove={practiceRef}\n        />\n      </main>\n      <footer className=\"text-center text-warmGray-700 text-xs py-2 bg-blue-300\">\n        By Bogdan Kapelyukh\n      </footer>\n    </>\n  );\n}\n\n// =======================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}