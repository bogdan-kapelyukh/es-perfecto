{"version":3,"sources":["helper-functions.js","general-components/label-and-text-field.js","verb-management/verb-addition-window.js","verb-management/verb-manager.js","general-components/toggle-button-list.js","practice/practice.js","index.js"],"names":["capitalize","string","charAt","toUpperCase","slice","randomChoice","array","Math","floor","random","length","checkOnlySpanishCharacters","test","window","alert","LabelAndTextField","divClassName","textFieldClassName","textFieldPlaceHolder","labelText","sharedId","textFieldValue","textFieldOnChange","requireTextField","disableTextField","maxLength","className","htmlFor","id","type","value","onChange","placeholder","required","disabled","GENERAL_DIV_CLASS_NAME","IMPORTANT_FIELD_DIV_CLASS_NAME","DEFAULT_VERB","spanishInfinitive","englishPast","englishPresent","past","present","isRegular","VerbAdditionWindow","props","verbToAdd","setVerbToAdd","pronounObjectsArray","code","display","handleInputChange","e","target","toLowerCase","handleArrayInputChange","arrayToChange","indexToChange","newItem","newArray","changeOneItem","displayed","onClick","setDisplayed","icon","faTimesCircle","onSubmit","preventDefault","indexOf","handleSubmit","name","checked","faQuestionCircle","conjugationObject","infinitive","ending","stem","conjugationObj","Array","fill","esConjugate","map","pronounObject","index","VerbManager","deleteButtonContent","useState","vawIsDisplayed","setVawIsDisplayed","selectedVerbs","setSelectedVerbs","listOfVerbs","setListOfVerbs","handleEditVerb","JSON","parse","currentTarget","getAttribute","deleteButtonClassName","deleteButtonIsDisabled","ref","selfRef","updatedListOfVerbs","indexToDelete","selectedVerbObject","i","splice","verbObject","Fragment","onDoubleClick","clickedVerbObject","stopPropagation","updatedSelectedVerbs","findIndex","push","handleVerbSelection","stringify","newVerb","submitType","foundMatchingInfinitive","ToggleButtonList","listClassNames","labelsArray","label","stateClassName","stateMarker","valuesArray","onStyle","onMarker","offStyle","offMarker","buttonStyle","handleButtonClick","String","Practice","handleTenseChange","updatedTenseIndex","updatedTenses","state","selectedTenses","tense","setState","inputValue","input","handleNewQuestion","tenseNumbers","forEach","tenseBool","sentenceObject","spanishSentencesObject","englishSentence","irConjugation","spanish","english","conjugationIndex","yo","tú","él","ella","usted","nosotros","nosotras","vosotros","vosotras","ellos","ellas","ustedes","normalArray","prodropArray","console","error","makeSentenceObject","question","answers","trimmedInput","trim","inputWordsArray","processedWord","join","filter","word","isCorrect","userInputSpansArray","endSpace","toString","feedbackMessage","actualAnswer","clearInputAndNewQuestion","bind","this","feedbackSectionContents","faCheckSquare","style","width","faAngleRight","href","sectionBelow","current","scrollIntoView","behavior","faAngleDown","React","Component","App","defaultLov","verbManagerRef","useRef","practiceRef","sectionAbove","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.223d291c.chunk.js","sourcesContent":["export function capitalize(string) {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\nexport function randomChoice(array) {\r\n  return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport function esConjugate(infinitive) {\r\n  const ending = infinitive.slice(-2);\r\n  const stem = infinitive.slice(0, -2);\r\n  let conjugationObj = {};\r\n  if (ending === \"ar\") {\r\n    conjugationObj.past = [\r\n      stem + \"é\",\r\n      stem + \"aste\",\r\n      stem + \"ó\",\r\n      stem + \"amos\",\r\n      stem + \"asteis\",\r\n      stem + \"aron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"as\",\r\n      stem + \"a\",\r\n      stem + \"amos\",\r\n      stem + \"áis\",\r\n      stem + \"an\",\r\n    ];\r\n  } else if (ending === \"er\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"emos\",\r\n      stem + \"éis\",\r\n      stem + \"en\",\r\n    ];\r\n  } else if (ending === \"ir\") {\r\n    conjugationObj.past = [\r\n      stem + \"í\",\r\n      stem + \"iste\",\r\n      stem + \"ió\",\r\n      stem + \"imos\",\r\n      stem + \"isteis\",\r\n      stem + \"ieron\",\r\n    ];\r\n    conjugationObj.present = [\r\n      stem + \"o\",\r\n      stem + \"es\",\r\n      stem + \"e\",\r\n      stem + \"imos\",\r\n      stem + \"ís\",\r\n      stem + \"en\",\r\n    ];\r\n  } else {\r\n    conjugationObj.past = Array(6).fill(infinitive);\r\n    conjugationObj.present = Array(6).fill(infinitive);\r\n  }\r\n  return conjugationObj;\r\n}\r\n\r\nexport function checkOnlySpanishCharacters(string) {\r\n  if (!/^[a-záéíóúüñ]*$/i.test(string)) {\r\n    window.alert(\r\n      \"Please only type letters that are in the spanish alphabet: a-z and áéíóúüñ\"\r\n    );\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function makeSentenceObject(verbObject, tense) {\r\n  const pronounObjectsArray = [\r\n    { spanish: \"yo\", english: \"i\" },\r\n    { spanish: \"tú\", english: \"you (informal)\" },\r\n    { spanish: \"él\", english: \"he\" },\r\n    { spanish: \"ella\", english: \"she\" },\r\n    { spanish: \"usted\", english: \"you (formal)\" },\r\n    { spanish: \"nosotros\", english: \"we (m)\" },\r\n    { spanish: \"nosotras\", english: \"we (f)\" },\r\n    { spanish: \"vosotros\", english: \"you (pl, m)\" },\r\n    { spanish: \"vosotras\", english: \"you (pl, f)\" },\r\n    { spanish: \"ellos\", english: \"they (m)\" },\r\n    { spanish: \"ellas\", english: \"they (f)\" },\r\n    { spanish: \"ustedes\", english: \"they (formal)\" },\r\n  ];\r\n  const irConjugation = [\"voy\", \"vas\", \"va\", \"vamos\", \"váis\", \"van\"];\r\n  const toBeConjugation = [\"am\", \"are\", \"is\", \"are\", \"are\", \"are\"];\r\n  const pronounIndexObject = {\r\n    yo: 0,\r\n    tú: 1,\r\n    él: 2,\r\n    ella: 2,\r\n    usted: 2,\r\n    nosotros: 3,\r\n    nosotras: 3,\r\n    vosotros: 4,\r\n    vosotras: 4,\r\n    ellos: 5,\r\n    ellas: 5,\r\n    ustedes: 5,\r\n  };\r\n\r\n  let pronounObject = randomChoice(pronounObjectsArray);\r\n\r\n  let spanishSentencesObject;\r\n  let englishSentence;\r\n  const conjugationIndex = pronounIndexObject[pronounObject.spanish];\r\n  if (tense === 0) {\r\n    spanishSentencesObject = {\r\n      normalArray: [pronounObject.spanish, verbObject.past[conjugationIndex]],\r\n      prodropArray: [verbObject.past[conjugationIndex]],\r\n    };\r\n    englishSentence = [pronounObject.english, verbObject.englishPast];\r\n  } else if (tense === 1) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        verbObject.present[conjugationIndex],\r\n      ],\r\n      prodropArray: [verbObject.present[conjugationIndex]],\r\n    };\r\n    if (pronounObject.spanish === \"él\" || pronounObject.spanish === \"ella\") {\r\n      englishSentence = [\r\n        pronounObject.english,\r\n        verbObject.englishPresent + \"s\",\r\n      ];\r\n    } else {\r\n      englishSentence = [pronounObject.english, verbObject.englishPresent];\r\n    }\r\n  } else if (tense === 2) {\r\n    spanishSentencesObject = {\r\n      normalArray: [\r\n        pronounObject.spanish,\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n      prodropArray: [\r\n        irConjugation[conjugationIndex],\r\n        \"a\",\r\n        verbObject.spanishInfinitive,\r\n      ],\r\n    };\r\n    englishSentence = [\r\n      pronounObject.english,\r\n      pronounObject.spanish !== \"usted\"\r\n        ? toBeConjugation[conjugationIndex]\r\n        : \"are\",\r\n      \"going\",\r\n      \"to\",\r\n      verbObject.englishPresent,\r\n    ];\r\n  } else {\r\n    console.error(\r\n      `Invalid tense argument passed to makeSentenceObject function: ${tense}`\r\n    );\r\n  }\r\n\r\n  return {\r\n    spanishSentencesObject: spanishSentencesObject,\r\n    englishSentence: englishSentence,\r\n  };\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction LabelAndTextField({\r\n  divClassName,\r\n  textFieldClassName,\r\n  textFieldPlaceHolder,\r\n  labelText,\r\n  sharedId,\r\n  textFieldValue,\r\n  textFieldOnChange,\r\n  requireTextField,\r\n  disableTextField,\r\n  maxLength,\r\n}) {\r\n  return (\r\n    <div className={divClassName}>\r\n      <label htmlFor={sharedId}>{labelText}</label>\r\n      <input\r\n        id={sharedId}\r\n        className={textFieldClassName}\r\n        type=\"text\"\r\n        value={textFieldValue}\r\n        onChange={textFieldOnChange}\r\n        placeholder={textFieldPlaceHolder}\r\n        required={requireTextField}\r\n        disabled={disableTextField}\r\n        maxLength={maxLength}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nLabelAndTextField.propTypes = {\r\n  sharedId: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LabelAndTextField;\r\n","import React from \"react\";\r\nimport { esConjugate, checkOnlySpanishCharacters } from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTimesCircle,\r\n  faQuestionCircle,\r\n} from \"@fortawesome/free-regular-svg-icons\";\r\nimport LabelAndTextField from \"../general-components/label-and-text-field\";\r\n\r\nconst GENERAL_DIV_CLASS_NAME =\r\n  \"flex flex-col lg:flex-row lg:items-center lg:space-x-2 space-y-2\";\r\n\r\nconst IMPORTANT_FIELD_DIV_CLASS_NAME = \"flex flex-col space-y-2\";\r\n\r\nconst DEFAULT_VERB = {\r\n  spanishInfinitive: \"\",\r\n  englishPast: \"\",\r\n  englishPresent: \"\",\r\n  past: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  present: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  isRegular: true,\r\n};\r\n\r\nexport default function VerbAdditionWindow(props) {\r\n  const verbToAdd = props.verbToAdd;\r\n  const setVerbToAdd = props.setVerbToAdd;\r\n\r\n  const pronounObjectsArray = [\r\n    { code: \"yo\", display: \"Yo\" },\r\n    { code: \"tú\", display: \"Tú\" },\r\n    { code: \"él\", display: \"Él/ella/usted\" },\r\n    { code: \"nosotros\", display: \"Nosotros/nosotras\" },\r\n    { code: \"vosotros\", display: \"Vosotros/vosotras\" },\r\n    { code: \"ellos\", display: \"Ellos/ellas/ustedes\" },\r\n  ];\r\n\r\n  function changeOneItem(arrayToChange, indexToChange, newItem) {\r\n    const newArray = arrayToChange.slice();\r\n    newArray[indexToChange] = newItem;\r\n    return newArray;\r\n  }\r\n\r\n  function handleInfinitiveChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd(() => {\r\n      const spanishInfinitive = e.target.value.toLowerCase();\r\n      if (verbToAdd.isRegular) {\r\n        const conjugationObject = esConjugate(spanishInfinitive);\r\n        return {\r\n          ...verbToAdd,\r\n          spanishInfinitive: spanishInfinitive,\r\n          past: conjugationObject.past,\r\n          present: conjugationObject.present,\r\n        };\r\n      }\r\n      return { ...verbToAdd, spanishInfinitive: spanishInfinitive };\r\n    });\r\n  }\r\n\r\n  function handleInputChange(e) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [e.target.id]: e.target.value.toLowerCase(),\r\n    });\r\n  }\r\n\r\n  function handleArrayInputChange(e, arrayToChange, indexToChange) {\r\n    if (!checkOnlySpanishCharacters(e.target.value)) {\r\n      return;\r\n    }\r\n\r\n    setVerbToAdd({\r\n      ...verbToAdd,\r\n      [arrayToChange]: changeOneItem(\r\n        verbToAdd[arrayToChange],\r\n        indexToChange,\r\n        e.target.value.toLowerCase()\r\n      ),\r\n    });\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (\r\n      verbToAdd.past.indexOf(\"\") === -1 &&\r\n      verbToAdd.present.indexOf(\"\") === -1\r\n    ) {\r\n      props.handleSubmit(verbToAdd);\r\n    } else {\r\n      window.alert(\"Make sure all fields are filled in.\");\r\n    }\r\n  }\r\n\r\n  function handleClose() {\r\n    props.setDisplayed(false);\r\n    setVerbToAdd(DEFAULT_VERB);\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`fixed inset-0 z-20 overflow-scroll bg-gray-50 px-10 py-8 ${\r\n        props.displayed\r\n          ? \"transform-none transition-transform duration-500\"\r\n          : \"transform translate-y-full transition-transform duration-500\"\r\n      }\r\n      lg:w-max\r\n      lg:mx-auto\r\n      lg:overflow-y-auto\r\n      `}\r\n    >\r\n      <div className=\"flex\">\r\n        <h1 className=\"font-black text-4xl uppercase\">Add/edit a verb</h1>\r\n        <button onClick={handleClose} className=\"ml-auto text-4xl\">\r\n          <FontAwesomeIcon\r\n            icon={faTimesCircle}\r\n            className=\"hover:text-blue-700\"\r\n          />\r\n        </button>\r\n      </div>\r\n      <form\r\n        className=\"mt-10\"\r\n        onSubmit={handleSubmit}\r\n        // disabled={!props.displayed}\r\n      >\r\n        <p className=\"font-bold text-xl\">The verb is ...</p>\r\n        <p className=\"font-normal text-gray-500 text-base leading-tight mt-2\">\r\n          Regular verbs will autocomplete entries based on what is in the\r\n          'Spanish infinitive' box\r\n        </p>\r\n        <ul className=\"flex space-x-2 mt-4\">\r\n          <li\r\n            className={`button flex space-x-2 items-center px-2 py-1 border-2  ${\r\n              verbToAdd.isRegular\r\n                ? \"button-on border-blue-700 border-opacity-100\"\r\n                : \"button-off border-opacity-0\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n          >\r\n            <label htmlFor=\"regular\">Regular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"regular\"\r\n              value=\"true\"\r\n              checked={verbToAdd.isRegular === true}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: true })}\r\n            />\r\n          </li>\r\n          <li\r\n            className={`flex space-x-2 items-center button px-2 py-1 border-2 ${\r\n              !verbToAdd.isRegular\r\n                ? \"button-on border-blue-700 border-opacity-100\"\r\n                : \"button-off border-opacity-0\"\r\n            }`}\r\n            onClick={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n          >\r\n            <label htmlFor=\"irregular\">Irregular</label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"isRegular\"\r\n              id=\"irregular\"\r\n              value=\"false\"\r\n              checked={verbToAdd.isRegular === false}\r\n              onChange={() => setVerbToAdd({ ...verbToAdd, isRegular: false })}\r\n            />\r\n          </li>\r\n        </ul>\r\n        <hr className=\"mt-4\" />\r\n        <div className=\"flex flex-col lg:flex-row lg:justify-center lg:space-x-8 space-y-2 lg:space-y-0 mt-4\">\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                Spanish Infinitive <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"spanishInfinitive\"\r\n            textFieldValue={verbToAdd.spanishInfinitive}\r\n            textFieldOnChange={handleInfinitiveChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Past <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPast\"\r\n            textFieldValue={verbToAdd.englishPast}\r\n            textFieldOnChange={handleInputChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n          />\r\n          <LabelAndTextField\r\n            divClassName={IMPORTANT_FIELD_DIV_CLASS_NAME}\r\n            textFieldClassName=\"normal-input\"\r\n            labelText={\r\n              <>\r\n                English Present <FontAwesomeIcon icon={faQuestionCircle} />\r\n              </>\r\n            }\r\n            sharedId=\"englishPresent\"\r\n            textFieldValue={verbToAdd.englishPresent}\r\n            textFieldOnChange={handleInputChange}\r\n            requireTextField={true}\r\n            maxLength={25}\r\n          />\r\n        </div>\r\n        <hr className=\"mt-8\" />\r\n        <div className=\"lg:flex lg:justify-center lg:px-10 lg:space-x-10\">\r\n          <div className=\"flex flex-col space-y-2 mt-4\">\r\n            <h2 className=\"font-bold text-xl mb-2\">Past Tense</h2>\r\n            {pronounObjectsArray.map((pronounObject, index) => {\r\n              return (\r\n                <LabelAndTextField\r\n                  divClassName={GENERAL_DIV_CLASS_NAME}\r\n                  textFieldClassName={\r\n                    verbToAdd.isRegular ? \"autocomplete-field\" : \"normal-input\"\r\n                  }\r\n                  textFieldPlaceHolder={\r\n                    verbToAdd.isRegular ? \"Box will autocomplete\" : \"\"\r\n                  }\r\n                  key={pronounObject.code + \"0\"}\r\n                  labelText={pronounObject.display}\r\n                  sharedId={pronounObject.code + \"0\"}\r\n                  textFieldValue={verbToAdd.past[index]}\r\n                  textFieldOnChange={(e) =>\r\n                    handleArrayInputChange(e, \"past\", index)\r\n                  }\r\n                  requireTextField={true}\r\n                  disableTextField={verbToAdd.isRegular ? true : false}\r\n                  maxLength={25}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n          <hr className=\"mt-8\" />\r\n          <div className=\"flex flex-col space-y-2 mt-4\">\r\n            <h2 className=\"font-bold text-xl mb-2\">Present Tense</h2>\r\n            {pronounObjectsArray.map((pronounObject, index) => {\r\n              return (\r\n                <LabelAndTextField\r\n                  divClassName={GENERAL_DIV_CLASS_NAME}\r\n                  textFieldClassName={\r\n                    verbToAdd.isRegular ? \"autocomplete-field\" : \"normal-input\"\r\n                  }\r\n                  textFieldPlaceHolder={\r\n                    verbToAdd.isRegular ? \"Box will autocomplete\" : \"\"\r\n                  }\r\n                  key={pronounObject.code + \"0\"}\r\n                  labelText={pronounObject.display}\r\n                  sharedId={pronounObject.code + \"0\"}\r\n                  textFieldValue={verbToAdd.present[index]}\r\n                  textFieldOnChange={(e) =>\r\n                    handleArrayInputChange(e, \"present\", index)\r\n                  }\r\n                  requireTextField={true}\r\n                  disableTextField={verbToAdd.isRegular ? true : false}\r\n                  maxLength={25}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <button\r\n          className={`mt-4 button bg-yellow-300 px-4 py-2 hover:bg-yellow-700 lg:mx-auto lg:block lg:mt-10`}\r\n          type=\"submit\"\r\n        >\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { capitalize } from \"../helper-functions\";\r\nimport VerbAdditionWindow from \"./verb-addition-window\";\r\n\r\nconst DEFAULT_VERB = {\r\n  spanishInfinitive: \"\",\r\n  englishPast: \"\",\r\n  englishPresent: \"\",\r\n  past: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  present: [\"\", \"\", \"\", \"\", \"\", \"\"],\r\n  isRegular: true,\r\n};\r\n\r\nexport default function VerbManager(props) {\r\n  const [verbToAdd, setVerbToAdd] = useState(DEFAULT_VERB);\r\n  const [vawIsDisplayed, setVawIsDisplayed] = useState(false);\r\n\r\n  const selectedVerbs = props.selectedVerbs;\r\n  const setSelectedVerbs = props.setSelectedVerbs;\r\n  const listOfVerbs = props.listOfVerbs;\r\n  const setListOfVerbs = props.setListOfVerbs;\r\n\r\n  function handleEditVerb(e) {\r\n    setVerbToAdd(JSON.parse(e.currentTarget.getAttribute(\"data-verb-object\")));\r\n    setVawIsDisplayed(true);\r\n  }\r\n\r\n  function handleVerbSelection(e, clickedVerbObject) {\r\n    e.stopPropagation();\r\n    const updatedSelectedVerbs = selectedVerbs.slice();\r\n    const index = updatedSelectedVerbs.findIndex(\r\n      (selectedVerbObject) =>\r\n        selectedVerbObject.spanishInfinitive ===\r\n        clickedVerbObject.spanishInfinitive\r\n    );\r\n    if (index !== -1) {\r\n      updatedSelectedVerbs.splice(index, 1);\r\n    } else {\r\n      updatedSelectedVerbs.push(clickedVerbObject);\r\n    }\r\n    setSelectedVerbs(updatedSelectedVerbs);\r\n  }\r\n\r\n  function handleDeleteVerb() {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    if (updatedListOfVerbs.length === 1) {\r\n      window.alert(\"Cannot delete last remaining verb.\");\r\n    } else {\r\n      let indexToDelete;\r\n      for (const selectedVerbObject of selectedVerbs) {\r\n        for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n          if (\r\n            selectedVerbObject.spanishInfinitive ===\r\n            updatedListOfVerbs[i].spanishInfinitive\r\n          ) {\r\n            indexToDelete = i;\r\n            break;\r\n          }\r\n        }\r\n        updatedListOfVerbs.splice(indexToDelete, 1);\r\n      }\r\n      if (updatedListOfVerbs.length !== 0) {\r\n        setListOfVerbs(updatedListOfVerbs);\r\n        setSelectedVerbs([]);\r\n      } else {\r\n        window.alert(\"Cannot delete last remaining verb.\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function handleVerbSubmit(newVerb, submitType) {\r\n    let updatedListOfVerbs = listOfVerbs.slice();\r\n    let foundMatchingInfinitive = false;\r\n    for (let i = 0; i < updatedListOfVerbs.length; i++) {\r\n      if (\r\n        newVerb.spanishInfinitive === updatedListOfVerbs[i].spanishInfinitive\r\n      ) {\r\n        foundMatchingInfinitive = true;\r\n        updatedListOfVerbs[i] = newVerb;\r\n        break;\r\n      }\r\n    }\r\n    if (!foundMatchingInfinitive) {\r\n      updatedListOfVerbs.push(newVerb);\r\n    }\r\n    setListOfVerbs(updatedListOfVerbs);\r\n    setVawIsDisplayed(false);\r\n    setVerbToAdd(DEFAULT_VERB);\r\n    setSelectedVerbs([]);\r\n  }\r\n\r\n  let deleteButtonContent;\r\n  let deleteButtonClassName =\r\n    \"bg-white uppercase tracking-wider text-sm font-semibold rounded shadow cursor-not-allowed\";\r\n  let deleteButtonIsDisabled = true;\r\n  if (listOfVerbs.length === selectedVerbs.length) {\r\n    deleteButtonContent = \"Cannot delete all verbs\";\r\n  } else {\r\n    if (selectedVerbs.length === 0) {\r\n      deleteButtonContent = \"Select a verb to delete it\";\r\n    } else {\r\n      deleteButtonIsDisabled = false;\r\n      deleteButtonClassName = \"button button-off\";\r\n      deleteButtonContent = (\r\n        <>\r\n          <span className=\"text-red-700 font-black\">-</span> Delete Verb\r\n        </>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <section className=\"px-8 py-4\" ref={props.selfRef}>\r\n        <h1 className=\"font-black text-4xl uppercase\">Manage Verbs</h1>\r\n        <div className=\"flex space-x-4 mt-4\">\r\n          <button\r\n            onClick={() => {\r\n              setVawIsDisplayed(true);\r\n            }}\r\n            className=\"button stateless-button px-2 py-1\"\r\n          >\r\n            <span className=\"text-blue-700 font-black\">+</span> Add New Verb\r\n          </button>\r\n          <button\r\n            onClick={handleDeleteVerb}\r\n            className={`${deleteButtonClassName} px-2 py-1`}\r\n            disabled={deleteButtonIsDisabled}\r\n          >\r\n            {deleteButtonContent}\r\n          </button>\r\n        </div>\r\n        <ul className=\"list-disc list-inside mt-8\">\r\n          <li className=\"subtitle-text\">Double click a verb row to edit it</li>\r\n          <li className=\"subtitle-text mt-2\">Click anywhere to deselect</li>\r\n        </ul>\r\n\r\n        <table className=\"mt-8 simple-table\">\r\n          <thead className=\"subtitle-text\">\r\n            <tr>\r\n              <th>Spanish Infinitive</th>\r\n              <th>English Infinitive</th>\r\n              <th className=\"hidden lg:table-cell\">Ending Type</th>\r\n              <th className=\"hidden lg:table-cell\">Is Regular?</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {listOfVerbs.map((verbObject) => {\r\n              let className = \"\";\r\n              for (const selectedVerbObject of selectedVerbs) {\r\n                if (\r\n                  verbObject.spanishInfinitive ===\r\n                  selectedVerbObject.spanishInfinitive\r\n                ) {\r\n                  className = \"selected-row\";\r\n                }\r\n              }\r\n\r\n              return (\r\n                <React.Fragment key={verbObject.spanishInfinitive}>\r\n                  <tr\r\n                    onDoubleClick={handleEditVerb}\r\n                    onClick={(e) => handleVerbSelection(e, verbObject)}\r\n                    data-verb-object={JSON.stringify(verbObject)}\r\n                    className={className}\r\n                  >\r\n                    <td>{capitalize(verbObject.spanishInfinitive)}</td>\r\n                    <td>To {verbObject.englishPresent}</td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular\r\n                        ? verbObject.spanishInfinitive.slice(-2)\r\n                        : \"N/A\"}\r\n                    </td>\r\n                    <td className=\"hidden lg:table-cell\">\r\n                      {verbObject.isRegular ? \"Regular\" : \"Irregular\"}\r\n                    </td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </section>\r\n      <div\r\n        className={`fixed inset-0 z-10 bg-black bg-opacity-50 ${\r\n          vawIsDisplayed ? \"block\" : \"hidden\"\r\n        }`}\r\n        onClick={() => {\r\n          setVawIsDisplayed(false);\r\n        }}\r\n      ></div>\r\n      <VerbAdditionWindow\r\n        displayed={vawIsDisplayed}\r\n        setDisplayed={setVawIsDisplayed}\r\n        verbToAdd={verbToAdd}\r\n        setVerbToAdd={setVerbToAdd}\r\n        handleSubmit={handleVerbSubmit}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","import PropTypes from \"prop-types\";\r\n\r\nfunction ToggleButtonList(props) {\r\n  return (\r\n    <ul className={props.listClassNames}>\r\n      {props.labelsArray.map((label, index) => {\r\n        let stateClassName;\r\n        let stateMarker;\r\n        if (props.valuesArray[index]) {\r\n          stateClassName = props.onStyle;\r\n          stateMarker = props.onMarker;\r\n        } else {\r\n          stateClassName = props.offStyle;\r\n          stateMarker = props.offMarker;\r\n        }\r\n\r\n        return (\r\n          <li key={label + String(index)}>\r\n            <button\r\n              className={`${props.buttonStyle} ${stateClassName}`}\r\n              onClick={() => props.handleButtonClick(index)}\r\n            >\r\n              {label} {stateMarker}\r\n            </button>\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n\r\nToggleButtonList.propTypes = {\r\n  listClassNames: PropTypes.string,\r\n  buttonStyle: PropTypes.string,\r\n  onStyle: PropTypes.string,\r\n  onMarker: PropTypes.element,\r\n  offStyle: PropTypes.string,\r\n  offMarker: PropTypes.element,\r\n  labelsArray: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  valuesArray: PropTypes.arrayOf(PropTypes.bool).isRequired,\r\n  handleButtonClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ToggleButtonList;\r\n","import React from \"react\";\r\nimport ToggleButtonList from \"../general-components/toggle-button-list\";\r\nimport {\r\n  randomChoice,\r\n  capitalize,\r\n  makeSentenceObject,\r\n} from \"../helper-functions\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faAngleDown,\r\n  faAngleRight,\r\n  faCheckSquare,\r\n  faTimesCircle,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n// =======================\r\n\r\nexport default class Practice extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question: null,\r\n      answers: null,\r\n      input: \"\",\r\n      feedbackMessage: null,\r\n      selectedTenses: [false, true, true],\r\n    };\r\n    this.clearInputAndNewQuestion = this.clearInputAndNewQuestion.bind(this);\r\n    this.handleTenseChange = this.handleTenseChange.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  handleTenseChange = (updatedTenseIndex) => {\r\n    const updatedTenses = this.state.selectedTenses.map((tense, index) => {\r\n      return updatedTenseIndex === index ? !tense : tense;\r\n    });\r\n\r\n    if (updatedTenses.indexOf(true) === -1) {\r\n      window.alert(\"Make sure you have at least one tense selected.\");\r\n    } else {\r\n      this.setState({ selectedTenses: updatedTenses });\r\n    }\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const inputValue = e.target.value;\r\n    this.setState({ input: inputValue });\r\n  };\r\n\r\n  handleNewQuestion = () => {\r\n    let tenseNumbers = [];\r\n    this.state.selectedTenses.forEach((tenseBool, index) => {\r\n      if (tenseBool) {\r\n        tenseNumbers.push(index);\r\n      }\r\n    });\r\n    const sentenceObject = makeSentenceObject(\r\n      randomChoice(this.props.listOfVerbs),\r\n      randomChoice(tenseNumbers)\r\n    );\r\n    this.setState({\r\n      question: sentenceObject.englishSentence,\r\n      answers: sentenceObject.spanishSentencesObject,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const answers = this.state.answers;\r\n\r\n    // process input\r\n    const trimmedInput = this.state.input.trim().toLowerCase();\r\n    let inputWordsArray = [];\r\n    let processedWord = [];\r\n    for (let i = 0; i < trimmedInput.length; i++) {\r\n      if (trimmedInput.charAt(i) !== \" \") {\r\n        if (i === trimmedInput.length - 1) {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n          inputWordsArray.push(processedWord.join(\"\"));\r\n          processedWord = [];\r\n        } else {\r\n          processedWord.push(trimmedInput.charAt(i));\r\n        }\r\n      } else {\r\n        inputWordsArray.push(processedWord.join(\"\"));\r\n        processedWord = [];\r\n      }\r\n    }\r\n    inputWordsArray = inputWordsArray.filter((word) => word);\r\n\r\n    // check processed input against both spanish sentences\r\n    let isCorrect = true;\r\n    let userInputSpansArray = [];\r\n    if (\r\n      inputWordsArray.join(\" \") === answers.prodropArray.join(\" \") ||\r\n      inputWordsArray.join(\" \") === answers.normalArray.join(\" \")\r\n    ) {\r\n      userInputSpansArray.push(\r\n        <span className={\"correct-feedback\"} key={inputWordsArray.join(\" \")}>\r\n          {inputWordsArray.join(\" \")}\r\n        </span>\r\n      );\r\n    } else {\r\n      isCorrect = false;\r\n      // if incorrect number of words\r\n      if (inputWordsArray.length !== answers.normalArray.length) {\r\n        userInputSpansArray.push(\r\n          <span className={\"wrong-feedback\"} key={inputWordsArray.join(\" \")}>\r\n            {inputWordsArray.join(\" \")}\r\n          </span>\r\n        );\r\n      } else {\r\n        // word by word coloring feedback\r\n        inputWordsArray.forEach((word, index) => {\r\n          let endSpace = \" \";\r\n          if (index === answers.normalArray.length - 1) {\r\n            endSpace = \"\";\r\n          }\r\n          if (word === answers.normalArray[index]) {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"correct-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          } else {\r\n            userInputSpansArray.push(\r\n              <React.Fragment key={word + index.toString()}>\r\n                <span className={\"wrong-feedback\"}>{word}</span>\r\n                {endSpace}\r\n              </React.Fragment>\r\n            );\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      feedbackMessage: {\r\n        question: this.state.question.join(\" \"),\r\n        isCorrect: isCorrect,\r\n        userInputSpansArray: userInputSpansArray,\r\n        actualAnswer: answers.normalArray.join(\" \"),\r\n      },\r\n      input: \"\",\r\n    });\r\n\r\n    this.handleNewQuestion();\r\n  };\r\n\r\n  clearInputAndNewQuestion() {\r\n    this.setState({ input: \"\" });\r\n    this.handleNewQuestion();\r\n  }\r\n\r\n  // ================== RENDER =====================================\r\n\r\n  render() {\r\n    const question = this.state.question;\r\n    const input = this.state.input;\r\n    const feedbackMessage = this.state.feedbackMessage;\r\n    const selectedTenses = this.state.selectedTenses;\r\n\r\n    let feedbackSectionContents;\r\n    if (!feedbackMessage) {\r\n      feedbackSectionContents = (\r\n        <>\r\n          <p>...</p>\r\n          <p>English phrase: </p>\r\n          <p>Your answer: </p>\r\n          <p>Correct answer: </p>\r\n        </>\r\n      );\r\n    } else {\r\n      feedbackSectionContents = (\r\n        <>\r\n          {feedbackMessage.isCorrect ? (\r\n            <p className=\"font-bold text-blue-700\">CORRECT</p>\r\n          ) : (\r\n            <p className=\"font-bold text-red-700\">INCORRECT</p>\r\n          )}\r\n          <p>English phrase: {capitalize(feedbackMessage.question)}</p>\r\n          <p>Your answer: {feedbackMessage.userInputSpansArray}</p>\r\n          <p>Correct answer: {feedbackMessage.actualAnswer}</p>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <section ref={this.props.selfRef}>\r\n        <header className=\"px-8 py-4\">\r\n          <h1 className=\"font-black text-4xl uppercase\">Practice</h1>\r\n          <h2 className=\"mt-2\">Select Tenses:</h2>\r\n          <ToggleButtonList\r\n            listClassNames=\"flex space-x-2 mt-1\"\r\n            buttonStyle=\"button mt-2 px-2 py-1 group\"\r\n            onStyle=\"button-on\"\r\n            onMarker={\r\n              <FontAwesomeIcon\r\n                icon={faCheckSquare}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-on-button\"\r\n              />\r\n            }\r\n            offStyle=\"button-off\"\r\n            offMarker={\r\n              <FontAwesomeIcon\r\n                icon={faTimesCircle}\r\n                style={{ width: \"1em\" }}\r\n                className=\"fa-icon-off-button\"\r\n              />\r\n            }\r\n            labelsArray={[\"Past\", \"Present\", \"Future\"]}\r\n            valuesArray={selectedTenses}\r\n            handleButtonClick={this.handleTenseChange}\r\n          />\r\n          <button\r\n            className=\"button stateless-button mt-2 px-2 py-1\"\r\n            onClick={this.clearInputAndNewQuestion}\r\n          >\r\n            Generate Different Question\r\n          </button>\r\n          <hr className=\"mt-4\" />\r\n          <p className=\"mt-4 subtitle-text text-xs\">\r\n            Translate the following english phrase into spanish:{\" \"}\r\n          </p>\r\n          <p className=\"text-2xl font-bold\">\r\n            {question ? capitalize(question.join(\" \")) : null}\r\n          </p>\r\n        </header>\r\n        <div className=\"px-8 pb-4\">\r\n          <form className=\"flex space-x-2\" onSubmit={this.handleSubmit}>\r\n            <input\r\n              className=\"normal-input\"\r\n              placeholder=\"Enter answer here...\"\r\n              type=\"text\"\r\n              required\r\n              value={input}\r\n              onChange={(e) => this.handleInputChange(e)}\r\n              maxLength=\"50\"\r\n            />\r\n            <button className=\"button stateless-button px-4 py-1\" type=\"submit\">\r\n              <FontAwesomeIcon icon={faAngleRight} />\r\n            </button>\r\n          </form>\r\n\r\n          <section className=\"mt-2 subtitle-text\">\r\n            {feedbackSectionContents}\r\n          </section>\r\n          <a\r\n            href=\"#verb-manager\"\r\n            className=\"text-center block mt-4 font-semibold lg:hidden\"\r\n            onClick={() => {\r\n              this.props.sectionBelow.current.scrollIntoView({\r\n                behavior: \"smooth\",\r\n              });\r\n            }}\r\n          >\r\n            Manage which verbs you're tested on\r\n            <br />\r\n            <FontAwesomeIcon icon={faAngleDown} />\r\n          </a>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React, { useState, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport VerbManager from \"./verb-management/verb-manager\";\nimport Practice from \"./practice/practice\";\nimport defaultLov from \"./default-lov.json\";\nimport \"./index.css\";\n\n// =======================\n\nfunction App() {\n  const [listOfVerbs, setListOfVerbs] = useState(JSON.parse(defaultLov));\n  const verbManagerRef = useRef(null);\n  const practiceRef = useRef(null);\n  const [selectedVerbs, setSelectedVerbs] = useState([]);\n\n  return (\n    <main\n      onClick={() => {\n        setSelectedVerbs([]);\n      }}\n      className=\"lg:flex lg:justify-center lg:pt-28 min-h-screen\"\n    >\n      <Practice\n        listOfVerbs={listOfVerbs}\n        sectionBelow={verbManagerRef}\n        selfRef={practiceRef}\n      />\n      <VerbManager\n        selectedVerbs={selectedVerbs}\n        setSelectedVerbs={setSelectedVerbs}\n        selfRef={verbManagerRef}\n        listOfVerbs={listOfVerbs}\n        setListOfVerbs={setListOfVerbs}\n        sectionAbove={practiceRef}\n      />\n    </main>\n  );\n}\n\n// =======================\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}